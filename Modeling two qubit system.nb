(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    340892,       6591]
NotebookOptionsPosition[    333855,       6479]
NotebookOutlinePosition[    334228,       6495]
CellTagsIndexPosition[    334185,       6492]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{3.7557953118201027`*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"51d310c6-1345-4070-99da-97e9e9d2174a"],

Cell[CellGroupData[{

Cell["Modeling a two qubit system", "Title",
 CellChangeTimes->{{3.7544102662235537`*^9, 
  3.754410267817442*^9}},ExpressionUUID->"69463010-9cbb-47be-a96e-\
8daa5f77f1d3"],

Cell["Peter Gartin", "Text",
 CellChangeTimes->{{3.7544102335981493`*^9, 
  3.7544102523032*^9}},ExpressionUUID->"e4e2c69d-b8f4-42f9-8e7c-ccd05aa327e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Defining", " ", "operations"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Run", "[", 
    RowBox[{
    "<<", "\"\<C:\\\\Users\\\\peter\\\\Documents\\\\Research\\\\qi-functions\\\
\\BasicFunctions.wls\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CircleTimes", "=", "KroneckerProduct"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Z", "[", "1", "]"}], "=", 
     RowBox[{
      RowBox[{"PauliMatrix", "[", "3", "]"}], "\[CircleTimes]", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Z", "[", "2", "]"}], "=", " ", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "2", "]"}], "\[CircleTimes]", " ", 
      RowBox[{"PauliMatrix", "[", "3", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Z", "[", 
      RowBox[{"1", ",", "2"}], "]"}], "=", 
     RowBox[{
      RowBox[{"PauliMatrix", "[", "3", "]"}], "\[CircleTimes]", " ", 
      RowBox[{"PauliMatrix", "[", "3", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Hamiltonian", " ", "with", " ", "ZZ", " ", "coupling"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hz", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Omega]1"}], " ", 
       RowBox[{"Z", "[", "1", "]"}]}], " ", "+", 
      RowBox[{
       RowBox[{"-", "\[Omega]2"}], " ", 
       RowBox[{"Z", "[", "2", "]"}]}], "+", 
      RowBox[{"\[Lambda]", " ", 
       RowBox[{"Z", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Then", " ", "energy", " ", "eigenvalues", " ", "are", " ", "given", " ", 
     RowBox[{"by", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eigensystem", "[", "Hz", "]"}], "//", "MatrixForm"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"energy", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Eigenvalues", "[", "Hz", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Lambda]", "\[Equal]", ".1"}], ",", 
         RowBox[{"\[Omega]1", "\[Equal]", ".6"}], ",", 
         RowBox[{"\[Omega]2", "\[Equal]", ".7"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*TemplateBox[{\"00\"},\"Ket\"]\)\>\"", ",", "20", ",", 
           "Blue"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{".5", ",", 
           RowBox[{"energy", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*TemplateBox[{\"01\"},\"Ket\"]\)\>\"", ",", "20", ",", 
           "Blue"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.5", ",", 
           RowBox[{"energy", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*TemplateBox[{\"10\"},\"Ket\"]\)\>\"", ",", "20", ",", 
           "Blue"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", 
           RowBox[{"energy", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*TemplateBox[{\"11\"},\"Ket\"]\)\>\"", ",", "20", ",", 
           "Blue"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.5", ",", 
           RowBox[{"energy", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"energy", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "+", "i"}], ",", 
              RowBox[{"energy", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", "energy", "]"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{"Max", "[", "energy", "]"}], "+", "1"}]}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", "eV"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"Eigenvalues", "[", "Hz", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Lambda]", "\[Equal]", "c"}], ",", 
             RowBox[{"\[Omega]1", "\[Equal]", "a"}], ",", 
             RowBox[{"\[Omega]2", "\[Equal]", "b"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Lambda]", "=", "c"}], ",", 
            RowBox[{"\[Omega]1", "=", "a"}], ",", 
            RowBox[{"\[Omega]2", "=", "b"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "4"}], "}"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "3"}], "}"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"3", ",", "4"}], "}"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], "//", "MatrixForm"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "0"}], "}"}], ",", "0", ",", "10", ",", ".01"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", ",", "0"}], "}"}], ",", "0", ",", "10", ",", ".01"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c", ",", "0"}], "}"}], ",", "0", ",", "10", ",", ".01"}], 
      "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "\[Omega]1", ",", "\[Omega]2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "4"}], "}"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"Eigenvalues", "[", "Hz", "]"}], "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.754409135238901*^9, 3.75440915849282*^9}, {
   3.754409264446828*^9, 3.754409302984544*^9}, {3.7544100230209055`*^9, 
   3.754410031793638*^9}, {3.754410075777233*^9, 3.754410098227521*^9}, {
   3.7544103198396173`*^9, 3.75441032032787*^9}, 3.7544107418602858`*^9, {
   3.755004097746644*^9, 3.7550040981271505`*^9}, {3.7550258771039476`*^9, 
   3.7550258887337084`*^9}, {3.755451152440446*^9, 3.7554511861722913`*^9}, {
   3.755795193689237*^9, 3.7557951938611326`*^9}, {3.7557953416068873`*^9, 
   3.7557953548049755`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"880ef7b8-ba86-4779-99a4-7a7cd5abb59b"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"KroneckerProduct\\\"}]\\) in \\!\\(\\*RowBox[{\
\\\"KroneckerProduct\\\", \\\"[\\\", \\\"args__\\\", \\\"]\\\"}]\\) is \
Protected.\"",2,57,38,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.779046212392932*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"efa0e120-d2ee-4d75-b7cc-577b9d347660"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7554511867035084`*^9, 3.7555375581137314`*^9, 
  3.755619154461275*^9, 3.755623707440222*^9, 3.7557941341474905`*^9, 
  3.7557951950173244`*^9, 3.75586096252748*^9, 3.755974039820963*^9, 
  3.7559740976340637`*^9, 3.779046082422267*^9, 3.779046212484878*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"4c45c6ab-0170-48e7-b26d-b1e6c9f5e2b5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"\[Lambda]", "-", "\[Omega]1", "-", "\[Omega]2"}], 
      RowBox[{
       RowBox[{"-", "\[Lambda]"}], "+", "\[Omega]1", "-", "\[Omega]2"}], 
      RowBox[{
       RowBox[{"-", "\[Lambda]"}], "-", "\[Omega]1", "+", "\[Omega]2"}], 
      RowBox[{"\[Lambda]", "+", "\[Omega]1", "+", "\[Omega]2"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7554511867035084`*^9, 3.7555375581137314`*^9, 
  3.755619154461275*^9, 3.755623707440222*^9, 3.7557941341474905`*^9, 
  3.7557951950173244`*^9, 3.75586096252748*^9, 3.755974039820963*^9, 
  3.7559740976340637`*^9, 3.779046082422267*^9, 3.7790462124888735`*^9},
 CellLabel->
  "Out[63]//MatrixForm=",ExpressionUUID->"247dcfa0-379f-44db-a7ec-\
16679aadbffa"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"00\\\"},\\\"Ket\\\"]\\)\"\>",
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontSize->20,
     FontColor->RGBColor[0, 0, 1]], {0.5, -1.2}], InsetBox[
    StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"01\\\"},\\\"Ket\\\"]\\)\"\>",
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontSize->20,
     FontColor->RGBColor[0, 0, 1]], {4.5, 0.}], InsetBox[
    StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"10\\\"},\\\"Ket\\\"]\\)\"\>",
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontSize->20,
     FontColor->RGBColor[0, 0, 1]], {1.5, -0.2}], InsetBox[
    StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"11\\\"},\\\"Ket\\\"]\\)\"\>",
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontSize->20,
     FontColor->RGBColor[0, 0, 1]], {3.5, 1.4}], {
    LineBox[{{1, -1.2}, {2, -1.2}}], LineBox[{{2, -0.2}, {3, -0.2}}], 
    LineBox[{{3, 0.}, {4, 0.}}], LineBox[{{4, 1.4}, {5, 1.4}}]}},
  Axes->{False, True},
  AxesLabel->FormBox["eV", TraditionalForm],
  PlotRange->{{-1, 5}, {-2.2, 2.4}}]], "Output",
 CellChangeTimes->{3.7554511867035084`*^9, 3.7555375581137314`*^9, 
  3.755619154461275*^9, 3.755623707440222*^9, 3.7557941341474905`*^9, 
  3.7557951950173244`*^9, 3.75586096252748*^9, 3.755974039820963*^9, 
  3.7559740976340637`*^9, 3.779046082422267*^9, 3.779046212498866*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"a9db200e-7919-4944-b1de-b5e3c6091f71"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0, $CellContext`b$$ = 
    0, $CellContext`c$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 0}, 0, 10, 0.01}, {{
       Hold[$CellContext`b$$], 0}, 0, 10, 0.01}, {{
       Hold[$CellContext`c$$], 0}, 0, 10, 0.01}}, Typeset`size$$ = {
    312., {56., 63.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$9074$$ = 
    0, $CellContext`b$9075$$ = 0, $CellContext`c$9076$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 
        0, $CellContext`c$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$9074$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$9075$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$9076$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot[
         Simplify[
          
          Eigenvalues[$CellContext`Hz], {$CellContext`\[Lambda] == \
$CellContext`c$$, $CellContext`\[Omega]1 == $CellContext`a$$, $CellContext`\
\[Omega]2 == $CellContext`b$$}], {$CellContext`x, -1, 1}, PlotRange -> All], 
        MatrixForm[
         Block[{$CellContext`\[Lambda] = $CellContext`c$$, $CellContext`\
\[Omega]1 = $CellContext`a$$, $CellContext`\[Omega]2 = $CellContext`b$$}, {{{
            1, 3}, Part[
              Eigenvalues[$CellContext`Hz], 1] - Part[
             Eigenvalues[$CellContext`Hz], 3]}, {{1, 4}, Part[
              Eigenvalues[$CellContext`Hz], 1] - Part[
             Eigenvalues[$CellContext`Hz], 4]}, {{2, 4}, Part[
              Eigenvalues[$CellContext`Hz], 2] - Part[
             Eigenvalues[$CellContext`Hz], 4]}, {{2, 3}, Part[
              Eigenvalues[$CellContext`Hz], 2] - Part[
             Eigenvalues[$CellContext`Hz], 3]}, {{1, 2}, Part[
              Eigenvalues[$CellContext`Hz], 1] - Part[
             Eigenvalues[$CellContext`Hz], 2]}, {{3, 4}, Part[
              Eigenvalues[$CellContext`Hz], 3] - Part[
             Eigenvalues[$CellContext`Hz], 4]}}]]}, 
      "Specifications" :> {{{$CellContext`a$$, 0}, 0, 10, 
         0.01}, {{$CellContext`b$$, 0}, 0, 10, 0.01}, {{$CellContext`c$$, 0}, 
         0, 10, 0.01}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{367., {136., 143.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7554511867035084`*^9, 3.7555375581137314`*^9, 
  3.755619154461275*^9, 3.755623707440222*^9, 3.7557941341474905`*^9, 
  3.7557951950173244`*^9, 3.75586096252748*^9, 3.755974039820963*^9, 
  3.7559740976340637`*^9, 3.779046082422267*^9, 3.779046212603411*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"6be53382-dea8-4076-acf4-027e41414592"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], 
      RowBox[{
       RowBox[{"2", " ", "\[Lambda]"}], "-", 
       RowBox[{"2", " ", "\[Omega]2"}]}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Omega]1"}], "-", 
       RowBox[{"2", " ", "\[Omega]2"}]}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Lambda]"}], "-", 
       RowBox[{"2", " ", "\[Omega]2"}]}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], 
      RowBox[{
       RowBox[{"2", " ", "\[Omega]1"}], "-", 
       RowBox[{"2", " ", "\[Omega]2"}]}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], 
      RowBox[{
       RowBox[{"2", " ", "\[Lambda]"}], "-", 
       RowBox[{"2", " ", "\[Omega]1"}]}]},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Lambda]"}], "-", 
       RowBox[{"2", " ", "\[Omega]1"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7554511867035084`*^9, 3.7555375581137314`*^9, 
  3.755619154461275*^9, 3.755623707440222*^9, 3.7557941341474905`*^9, 
  3.7557951950173244`*^9, 3.75586096252748*^9, 3.755974039820963*^9, 
  3.7559740976340637`*^9, 3.779046082422267*^9, 3.779046212892231*^9},
 CellLabel->
  "Out[67]//MatrixForm=",ExpressionUUID->"a3875527-725f-47ac-817b-\
6ab4b0e771e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["I repeat the process again for XX Coupling.", "Section",
 CellChangeTimes->{
  3.754950482661346*^9},ExpressionUUID->"1b580a97-456c-4d0f-b505-\
2a1bfeff7e28"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"1", ",", "2"}], "]"}], "=", 
   RowBox[{
    RowBox[{"PauliMatrix", "[", "1", "]"}], "\[CircleTimes]", " ", 
    RowBox[{"PauliMatrix", "[", "1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Omega]1"}], " ", 
     RowBox[{"Z", "[", "1", "]"}]}], " ", "+", 
    RowBox[{
     RowBox[{"-", "\[Omega]2"}], " ", 
     RowBox[{"Z", "[", "2", "]"}]}], "+", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"X", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Hx", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigensystem", "[", "Hx", "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HxCon", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Hx", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]1", "==", "\[Omega]"}], ",", 
       RowBox[{"\[Omega]2", "==", "\[Omega]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigensystem", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Hx", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]1", "==", "\[Omega]"}], ",", 
       RowBox[{"\[Omega]2", "==", "\[Omega]"}]}], "}"}]}], "]"}], "]"}], "//",
   "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energy", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Eigenvalues", "[", "Hx", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]", "\[Equal]", ".2"}], ",", 
       RowBox[{"\[Omega]1", "\[Equal]", ".6"}], ",", 
       RowBox[{"\[Omega]2", "\[Equal]", ".7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*FractionBox[\(\(-\[Omega]1\) - \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 - \[Omega]2)\), \(2\)]\)] + \[Omega]2\), \(\[Lambda]\\\ \
\*SqrtBox[\(1 + \*SuperscriptBox[\((\*FractionBox[\(\[Omega]1 + \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 - \[Omega]2)\), \(2\)]\)] - \[Omega]2\), \(\[Lambda]\)])\), \
\(2\)]\)]\)]\)\!\(\*TemplateBox[{\"01\"},\"Ket\"]\) + \
\!\(\*FractionBox[\(1\), SqrtBox[\(1 + \*SuperscriptBox[\((\*FractionBox[\(\
\[Omega]1 + \*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \
\*SuperscriptBox[\((\[Omega]1 - \[Omega]2)\), \(2\)]\)] - \[Omega]2\), \(\
\[Lambda]\)])\), \(2\)]\)]]\)\!\(\*TemplateBox[{\"10\"},\"Ket\"]\)\>\"", ",", 
         "10"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.2", ",", 
         RowBox[{"energy", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*FractionBox[\(\(-\[Omega]1\) - \[Omega]2 - \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 + \[Omega]2)\), \(2\)]\)]\), \(\[Lambda]\\\ \*SqrtBox[\(1 + \
\*SuperscriptBox[\((\*FractionBox[\(\[Omega]1 + \[Omega]2 + \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 + \[Omega]2)\), \(2\)]\)]\), \(\[Lambda]\)])\), \
\(2\)]\)]\)]\)\!\(\*TemplateBox[{\"00\"},\"Ket\"]\) + \
\!\(\*FractionBox[\(1\), SqrtBox[\(1 + \*SuperscriptBox[\((\*FractionBox[\(\
\[Omega]1 + \[Omega]2 + \*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \
\*SuperscriptBox[\((\[Omega]1 + \[Omega]2)\), \(2\)]\)]\), \(\[Lambda]\)])\), \
\(2\)]\)]]\)\!\(\*TemplateBox[{\"11\"},\"Ket\"]\)\>\"", ",", "10"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"2.2", ",", 
         RowBox[{"energy", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*FractionBox[\(\(-\[Omega]1\) + \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 - \[Omega]2)\), \(2\)]\)] + \[Omega]2\), \(\[Lambda]\\\ \
\*SqrtBox[\(1 + \*SuperscriptBox[\((\*FractionBox[\(\(-\[Omega]1\) + \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 - \[Omega]2)\), \(2\)]\)] + \[Omega]2\), \(\[Lambda]\)])\), \
\(2\)]\)]\)]\)\!\(\*TemplateBox[{\"01\"},\"Ket\"]\) + \
\!\(\*FractionBox[\(1\), SqrtBox[\(1 + \
\*SuperscriptBox[\((\*FractionBox[\(\(-\[Omega]1\) + \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 - \[Omega]2)\), \(2\)]\)] + \[Omega]2\), \(\[Lambda]\)])\), \
\(2\)]\)]]\)\!\(\*TemplateBox[{\"10\"},\"Ket\"]\)\>\"", ",", "10"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"2.2", ",", 
         RowBox[{"energy", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*FractionBox[\(\(-\[Omega]1\) - \[Omega]2 + \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 + \[Omega]2)\), \(2\)]\)]\), \(\[Lambda]\\\ \*SqrtBox[\(1 + \
\*SuperscriptBox[\((\*FractionBox[\(\[Omega]1 + \[Omega]2 - \
\*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \*SuperscriptBox[\((\
\[Omega]1 + \[Omega]2)\), \(2\)]\)]\), \(\[Lambda]\)])\), \
\(2\)]\)]\)]\)\!\(\*TemplateBox[{\"00\"},\"Ket\"]\) + \
\!\(\*FractionBox[\(1\), SqrtBox[\(1 + \*SuperscriptBox[\((\*FractionBox[\(\
\[Omega]1 + \[Omega]2 - \*SqrtBox[\(\*SuperscriptBox[\(\[Lambda]\), \(2\)] + \
\*SuperscriptBox[\((\[Omega]1 + \[Omega]2)\), \(2\)]\)]\), \(\[Lambda]\)])\), \
\(2\)]\)]]\)\!\(\*TemplateBox[{\"11\"},\"Ket\"]\)\>\"", ",", "10"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"2.2", ",", 
         RowBox[{"energy", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"energy", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"energy", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Min", "[", "energy", "]"}], "-", ".3"}], ",", 
        RowBox[{
         RowBox[{"Max", "[", "energy", "]"}], "+", ".3"}]}], "}"}]}], "}"}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", "eV"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7544107364333744`*^9, 3.7544107662819767`*^9}, {
  3.7545927840349426`*^9, 3.7545927850407763`*^9}, {3.754662283129817*^9, 
  3.7546622989986143`*^9}, {3.755004206329651*^9, 3.75500422340814*^9}, {
  3.7551140188963594`*^9, 3.7551140321673408`*^9}, {3.7551140939992104`*^9, 
  3.7551141031163936`*^9}, {3.755119667983029*^9, 3.755119690817765*^9}, {
  3.7552624853040004`*^9, 3.755262495589775*^9}, {3.7554512030388656`*^9, 
  3.7554512272385855`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"7c8de1e1-2f15-4f08-b5a4-05e1240d5eff"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "\[Omega]1"}], "-", "\[Omega]2"}], "0", "0", "\[Lambda]"},
     {"0", 
      RowBox[{
       RowBox[{"-", "\[Omega]1"}], "+", "\[Omega]2"}], "\[Lambda]", "0"},
     {"0", "\[Lambda]", 
      RowBox[{"\[Omega]1", "-", "\[Omega]2"}], "0"},
     {"\[Lambda]", "0", "0", 
      RowBox[{"\[Omega]1", "+", "\[Omega]2"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7554512285353956`*^9, 3.755537582816131*^9, 
  3.7556191580549164`*^9, 3.755623709903945*^9, 3.7557941385223627`*^9, 
  3.7557951997203107`*^9, 3.7558609735115166`*^9, 3.755974061380288*^9, 
  3.755974104232271*^9, 3.7790460996993427`*^9},
 CellLabel->
  "Out[14]//MatrixForm=",ExpressionUUID->"06ae1659-2a12-4789-b7e5-\
15874709f9f5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Lambda]", "2"], "+", 
         SuperscriptBox["\[Omega]1", "2"], "-", 
         RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], "+", 
        SuperscriptBox["\[Omega]1", "2"], "-", 
        RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]], 
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Lambda]", "2"], "+", 
         SuperscriptBox["\[Omega]1", "2"], "+", 
         RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], "+", 
        SuperscriptBox["\[Omega]1", "2"], "+", 
        RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Omega]1", "-", "\[Omega]2", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Lambda]", "2"], "+", 
             SuperscriptBox["\[Omega]1", "2"], "-", 
             RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
             SuperscriptBox["\[Omega]2", "2"]}]]}], "\[Lambda]"]}], ",", "1", 
        ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Omega]1", "-", "\[Omega]2", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Lambda]", "2"], "+", 
             SuperscriptBox["\[Omega]1", "2"], "-", 
             RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
             SuperscriptBox["\[Omega]2", "2"]}]]}], "\[Lambda]"]}], ",", "1", 
        ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Omega]1", "+", "\[Omega]2", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Lambda]", "2"], "+", 
             SuperscriptBox["\[Omega]1", "2"], "+", 
             RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
             SuperscriptBox["\[Omega]2", "2"]}]]}], "\[Lambda]"]}], ",", "0", 
        ",", "0", ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Omega]1", "+", "\[Omega]2", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Lambda]", "2"], "+", 
             SuperscriptBox["\[Omega]1", "2"], "+", 
             RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
             SuperscriptBox["\[Omega]2", "2"]}]]}], "\[Lambda]"]}], ",", "0", 
        ",", "0", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7554512285353956`*^9, 3.755537582816131*^9, 
  3.7556191580549164`*^9, 3.755623709903945*^9, 3.7557941385223627`*^9, 
  3.7557951997203107`*^9, 3.7558609735115166`*^9, 3.755974061380288*^9, 
  3.755974104232271*^9, 3.779046099812274*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"c896f084-133f-499b-8364-\
e7c4f716eab2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "\[Lambda]"}], "\[Lambda]", 
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Lambda]", "2"], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Omega]2", "2"]}]}]]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Omega]2", "2"]}]}]]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"2", " ", "\[Omega]2"}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Lambda]", "2"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Omega]2", "2"]}]}]]}], "\[Lambda]"]}], ",", 
        "0", ",", "0", ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"2", " ", "\[Omega]2"}], "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Lambda]", "2"], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Omega]2", "2"]}]}]]}], "\[Lambda]"]}], ",", 
        "0", ",", "0", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7554512285353956`*^9, 3.755537582816131*^9, 
  3.7556191580549164`*^9, 3.755623709903945*^9, 3.7557941385223627`*^9, 
  3.7557951997203107`*^9, 3.7558609735115166`*^9, 3.755974061380288*^9, 
  3.755974104232271*^9, 3.779046099830261*^9},
 CellLabel->
  "Out[17]//MatrixForm=",ExpressionUUID->"a3ae4d79-f5d8-41d6-9d40-\
3eb7cc635976"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"\\!\\(\\*FractionBox[\\(\\(-\[Omega]1\\) - \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 - \[Omega]2)\\), \\(2\\)]\\)] + \[Omega]2\\), \
\\(\[Lambda]\\\\ \\*SqrtBox[\\(1 + \\*SuperscriptBox[\\((\\*FractionBox[\\(\
\[Omega]1 + \\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 - \[Omega]2)\\), \\(2\\)]\\)] - \[Omega]2\\), \
\\(\[Lambda]\\)])\\), \\(2\\)]\\)]\\)]\\)\\!\\(\\*TemplateBox[{\\\"01\\\"},\\\
\"Ket\\\"]\\) + \\!\\(\\*FractionBox[\\(1\\), SqrtBox[\\(1 + \
\\*SuperscriptBox[\\((\\*FractionBox[\\(\[Omega]1 + \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 - \[Omega]2)\\), \\(2\\)]\\)] - \[Omega]2\\), \
\\(\[Lambda]\\)])\\), \
\\(2\\)]\\)]]\\)\\!\\(\\*TemplateBox[{\\\"10\\\"},\\\"Ket\\\"]\\)\"\>",
     StripOnInput->False,
     FontSize->10], {2.2, -0.22360679774997896}], InsetBox[
    StyleBox["\<\"\\!\\(\\*FractionBox[\\(\\(-\[Omega]1\\) - \[Omega]2 - \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 + \[Omega]2)\\), \\(2\\)]\\)]\\), \
\\(\[Lambda]\\\\ \\*SqrtBox[\\(1 + \\*SuperscriptBox[\\((\\*FractionBox[\\(\
\[Omega]1 + \[Omega]2 + \\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\
\\)] + \\*SuperscriptBox[\\((\[Omega]1 + \[Omega]2)\\), \\(2\\)]\\)]\\), \\(\
\[Lambda]\\)])\\), \
\\(2\\)]\\)]\\)]\\)\\!\\(\\*TemplateBox[{\\\"00\\\"},\\\"Ket\\\"]\\) + \\!\\(\
\\*FractionBox[\\(1\\), SqrtBox[\\(1 + \
\\*SuperscriptBox[\\((\\*FractionBox[\\(\[Omega]1 + \[Omega]2 + \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 + \[Omega]2)\\), \\(2\\)]\\)]\\), \
\\(\[Lambda]\\)])\\), \
\\(2\\)]\\)]]\\)\\!\\(\\*TemplateBox[{\\\"11\\\"},\\\"Ket\\\"]\\)\"\>",
     StripOnInput->False,
     FontSize->10], {2.2, -1.3152946437965904}], InsetBox[
    StyleBox["\<\"\\!\\(\\*FractionBox[\\(\\(-\[Omega]1\\) + \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 - \[Omega]2)\\), \\(2\\)]\\)] + \[Omega]2\\), \
\\(\[Lambda]\\\\ \\*SqrtBox[\\(1 + \
\\*SuperscriptBox[\\((\\*FractionBox[\\(\\(-\[Omega]1\\) + \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 - \[Omega]2)\\), \\(2\\)]\\)] + \[Omega]2\\), \
\\(\[Lambda]\\)])\\), \\(2\\)]\\)]\\)]\\)\\!\\(\\*TemplateBox[{\\\"01\\\"},\\\
\"Ket\\\"]\\) + \\!\\(\\*FractionBox[\\(1\\), SqrtBox[\\(1 + \
\\*SuperscriptBox[\\((\\*FractionBox[\\(\\(-\[Omega]1\\) + \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 - \[Omega]2)\\), \\(2\\)]\\)] + \[Omega]2\\), \
\\(\[Lambda]\\)])\\), \
\\(2\\)]\\)]]\\)\\!\\(\\*TemplateBox[{\\\"10\\\"},\\\"Ket\\\"]\\)\"\>",
     StripOnInput->False,
     FontSize->10], {2.2, 0.22360679774997896}], InsetBox[
    StyleBox["\<\"\\!\\(\\*FractionBox[\\(\\(-\[Omega]1\\) - \[Omega]2 + \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 + \[Omega]2)\\), \\(2\\)]\\)]\\), \
\\(\[Lambda]\\\\ \\*SqrtBox[\\(1 + \\*SuperscriptBox[\\((\\*FractionBox[\\(\
\[Omega]1 + \[Omega]2 - \\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\
\\)] + \\*SuperscriptBox[\\((\[Omega]1 + \[Omega]2)\\), \\(2\\)]\\)]\\), \\(\
\[Lambda]\\)])\\), \
\\(2\\)]\\)]\\)]\\)\\!\\(\\*TemplateBox[{\\\"00\\\"},\\\"Ket\\\"]\\) + \\!\\(\
\\*FractionBox[\\(1\\), SqrtBox[\\(1 + \
\\*SuperscriptBox[\\((\\*FractionBox[\\(\[Omega]1 + \[Omega]2 - \
\\*SqrtBox[\\(\\*SuperscriptBox[\\(\[Lambda]\\), \\(2\\)] + \
\\*SuperscriptBox[\\((\[Omega]1 + \[Omega]2)\\), \\(2\\)]\\)]\\), \
\\(\[Lambda]\\)])\\), \
\\(2\\)]\\)]]\\)\\!\\(\\*TemplateBox[{\\\"11\\\"},\\\"Ket\\\"]\\)\"\>",
     StripOnInput->False,
     FontSize->10], {2.2, 1.3152946437965904}], {
    LineBox[{{0, -0.22360679774997896`}, {1, -0.22360679774997896`}}], 
    LineBox[{{0, 0.22360679774997896`}, {1, 0.22360679774997896`}}], 
    LineBox[{{0, -1.3152946437965904`}, {1, -1.3152946437965904`}}], 
    LineBox[{{0, 1.3152946437965904`}, {1, 1.3152946437965904`}}]}},
  Axes->{False, True},
  AxesLabel->FormBox["eV", TraditionalForm],
  PlotRange->{{-1, 4}, {-1.6152946437965905`, 
    1.6152946437965905`}}]], "Output",
 CellChangeTimes->{3.7554512285353956`*^9, 3.755537582816131*^9, 
  3.7556191580549164`*^9, 3.755623709903945*^9, 3.7557941385223627`*^9, 
  3.7557951997203107`*^9, 3.7558609735115166`*^9, 3.755974061380288*^9, 
  3.755974104232271*^9, 3.779046099843253*^9},
 CellLabel->"Out[19]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],ExpressionUUID->"703fdcce-66b4-40be-a82a-2091170617d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PlotEnergy", "[", 
    RowBox[{"H_", ",", "a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Eigenvalues", "[", "H", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Lambda]", "\[Equal]", "c"}], ",", 
         RowBox[{"\[Omega]1", "\[Equal]", "a"}], ",", 
         RowBox[{"\[Omega]2", "\[Equal]", "b"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EngergyGaps", "[", 
   RowBox[{"H_", ",", "a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]", "=", "c"}], ",", 
       RowBox[{"\[Omega]1", "=", "a"}], ",", 
       RowBox[{"\[Omega]2", "=", "b"}]}], "}"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", "H", "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], "//", 
   "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"waveFuction", "[", 
    RowBox[{
    "a_", ",", "b_", ",", "c_", ",", "\[Alpha]1_", ",", "\[Alpha]2_", ",", 
     "\[Alpha]3_", ",", "\[Alpha]4_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Alpha]1", " ", 
         RowBox[{"orthonormalBasis", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "+", 
        RowBox[{"\[Alpha]2", " ", 
         RowBox[{"orthonormalBasis", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "+", 
        RowBox[{"\[Alpha]3", " ", 
         RowBox[{"orthonormalBasis", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "+", 
        RowBox[{"\[Alpha]4", " ", 
         RowBox[{"orthonormalBasis", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox["\[Alpha]1", "2"], "+", 
        SuperscriptBox["\[Alpha]2", "2"], "+", 
        SuperscriptBox["\[Alpha]3", "2"], "+", 
        SuperscriptBox["\[Alpha]4", "2"]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]", " ", "\[Equal]", "c"}], ",", 
       RowBox[{"\[Omega]1", "\[Equal]", "a"}], ",", 
       RowBox[{"\[Omega]2", "\[Equal]", "b"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orthogonalBasis", "=", 
   RowBox[{"Eigenvectors", "[", "Hx", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orthonormalBasis", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Normalize", "[", 
        RowBox[{"orthogonalBasis", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Omega]1", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Omega]2", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"orthogonalBasis", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7550022065760374`*^9, 3.7550024231688085`*^9}, {
  3.7550033312714605`*^9, 3.7550033325714865`*^9}, {3.7550174118906136`*^9, 
  3.75501744509183*^9}, {3.75502460448787*^9, 3.7550246049715843`*^9}, {
  3.7550259674037066`*^9, 3.7550259676064167`*^9}, {3.7550309140486574`*^9, 
  3.755030946703574*^9}, {3.7551125262319603`*^9, 3.7551125501096797`*^9}, {
  3.755112588908566*^9, 3.755112617296502*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"91b5e671-b27c-4623-8836-89bab2c6b4b7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Omega]1", "-", "\[Omega]2", "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], "+", 
           SuperscriptBox["\[Omega]1", "2"], "-", 
           RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
           SuperscriptBox["\[Omega]2", "2"]}]]}], "\[Lambda]"]}], "1", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Omega]1", "-", "\[Omega]2", "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], "+", 
           SuperscriptBox["\[Omega]1", "2"], "-", 
           RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
           SuperscriptBox["\[Omega]2", "2"]}]]}], "\[Lambda]"]}], "1", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Omega]1", "+", "\[Omega]2", "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], "+", 
           SuperscriptBox["\[Omega]1", "2"], "+", 
           RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
           SuperscriptBox["\[Omega]2", "2"]}]]}], "\[Lambda]"]}], "0", "0", 
      "1"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Omega]1", "+", "\[Omega]2", "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], "+", 
           SuperscriptBox["\[Omega]1", "2"], "+", 
           RowBox[{"2", " ", "\[Omega]1", " ", "\[Omega]2"}], "+", 
           SuperscriptBox["\[Omega]2", "2"]}]]}], "\[Lambda]"]}], "0", "0", 
      "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7551125321150928`*^9, 3.7551125514211187`*^9}, 
   3.755112618217148*^9, 3.7552620192519035`*^9, 3.755367970507257*^9, 
   3.7554512369011993`*^9, 3.75553758869096*^9, 3.755619168904171*^9, 
   3.7556237146825943`*^9, {3.7557941424284945`*^9, 3.755794143537839*^9}, 
   3.7557952042264986`*^9, 3.755860978995722*^9, 3.755974110814534*^9, 
   3.77904612047317*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"5967ea0b-2adb-442c-a3b2-\
f6863dd3f4d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PlotEnergy", "[", 
       RowBox[{"Hx", ",", "a", ",", "b", ",", "c"}], "]"}], ",", 
      RowBox[{"waveFuction", "[", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "\[Alpha]1", ",", "\[Alpha]2", ",", 
        "\[Alpha]3", ",", "\[Alpha]4"}], "]"}]}], "}"}], "//", "MatrixForm"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", ".000"}], "}"}], ",", "0", ",", "100", ",", ".01"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", ".000"}], "}"}], ",", "0", ",", "100", ",", ".01"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.01"}], "}"}], ",", "0", ",", "20", ",", ".01"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]1", ",", ".01"}], "}"}], ",", "0", ",", "1", ",", 
     ".01"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]2", ",", ".000"}], "}"}], ",", "0", ",", "1", ",", 
     ".01"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]3", ",", ".000"}], "}"}], ",", "0", ",", "1", ",", 
     ".01"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]4", ",", ".000"}], "}"}], ",", "0", ",", "1", ",", 
     ".01"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"orthonormalBasis", ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ">", "0"}], "}"}]}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7549364816266837`*^9, 3.754936515757225*^9}, {
   3.754952445595894*^9, 3.754952493553119*^9}, {3.754952575657851*^9, 
   3.7549525887569213`*^9}, {3.7549526420385118`*^9, 
   3.7549526749878054`*^9}, {3.755002450377522*^9, 3.755002500592949*^9}, {
   3.75500258666713*^9, 3.7550025946289744`*^9}, {3.755019879197603*^9, 
   3.7550198851732917`*^9}, 3.7550199350429707`*^9, {3.7550199751475782`*^9, 
   3.7550200172037125`*^9}, {3.7550201824316325`*^9, 
   3.7550201866890807`*^9}, {3.755020469790904*^9, 3.755020484796869*^9}, {
   3.755020528745147*^9, 3.7550205432500334`*^9}, {3.7550205784268465`*^9, 
   3.755020594065014*^9}, {3.755021096741494*^9, 3.755021103236868*^9}, {
   3.755021177850567*^9, 3.755021262598858*^9}, {3.75502138320807*^9, 
   3.7550214324944844`*^9}, {3.7550218192663736`*^9, 
   3.7550218198474145`*^9}, {3.7550218519489975`*^9, 3.755021873242929*^9}, {
   3.7550219036626697`*^9, 3.7550219159723563`*^9}, {3.755021976350313*^9, 
   3.755021984510623*^9}, {3.7550221215001473`*^9, 3.755022172655055*^9}, {
   3.755022207082593*^9, 3.7550222789026394`*^9}, {3.7550225116257286`*^9, 
   3.755022518868883*^9}, {3.755023015422598*^9, 3.75502301779698*^9}, {
   3.7550230492543054`*^9, 3.7550230556968946`*^9}, {3.755024042948949*^9, 
   3.7550240558947425`*^9}, {3.7550259815819707`*^9, 3.755025982065732*^9}, {
   3.7550261889336596`*^9, 3.755026205069681*^9}, {3.7552797208481474`*^9, 
   3.755279855067966*^9}, {3.7552800438456955`*^9, 3.7552801040318213`*^9}, {
   3.755860999354496*^9, 3.755860999791957*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"c7b52fb6-879f-44cc-9049-3742bb65f7b2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0., $CellContext`b$$ = 
    0., $CellContext`c$$ = 0.01, $CellContext`\[Alpha]1$$ = 
    0.01, $CellContext`\[Alpha]2$$ = 0., $CellContext`\[Alpha]3$$ = 
    0., $CellContext`\[Alpha]4$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 0.}, 0, 100, 0.01}, {{
       Hold[$CellContext`b$$], 0.}, 0, 100, 0.01}, {{
       Hold[$CellContext`c$$], 0.01}, 0, 20, 0.01}, {{
       Hold[$CellContext`\[Alpha]1$$], 0.01}, 0, 1, 0.01}, {{
       Hold[$CellContext`\[Alpha]2$$], 0.}, 0, 1, 0.01}, {{
       Hold[$CellContext`\[Alpha]3$$], 0.}, 0, 1, 0.01}, {{
       Hold[$CellContext`\[Alpha]4$$], 0.}, 0, 1, 0.01}}, Typeset`size$$ = {
    246., {65.5, 72.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$4151$$ = 
    0, $CellContext`b$4152$$ = 0, $CellContext`c$4153$$ = 
    0, $CellContext`\[Alpha]1$4154$$ = 0, $CellContext`\[Alpha]2$4155$$ = 
    0, $CellContext`\[Alpha]3$4156$$ = 0, $CellContext`\[Alpha]4$4157$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0., $CellContext`b$$ = 
        0., $CellContext`c$$ = 0.01, $CellContext`\[Alpha]1$$ = 
        0.01, $CellContext`\[Alpha]2$$ = 0., $CellContext`\[Alpha]3$$ = 
        0., $CellContext`\[Alpha]4$$ = 0.}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$4151$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$4152$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$4153$$, 0], 
        Hold[$CellContext`\[Alpha]1$$, $CellContext`\[Alpha]1$4154$$, 0], 
        Hold[$CellContext`\[Alpha]2$$, $CellContext`\[Alpha]2$4155$$, 0], 
        Hold[$CellContext`\[Alpha]3$$, $CellContext`\[Alpha]3$4156$$, 0], 
        Hold[$CellContext`\[Alpha]4$$, $CellContext`\[Alpha]4$4157$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> MatrixForm[{
         $CellContext`PlotEnergy[$CellContext`Hx, $CellContext`a$$, \
$CellContext`b$$, $CellContext`c$$], 
         $CellContext`waveFuction[$CellContext`a$$, $CellContext`b$$, \
$CellContext`c$$, $CellContext`\[Alpha]1$$, $CellContext`\[Alpha]2$$, \
$CellContext`\[Alpha]3$$, $CellContext`\[Alpha]4$$]}], 
      "Specifications" :> {{{$CellContext`a$$, 0.}, 0, 100, 
         0.01}, {{$CellContext`b$$, 0.}, 0, 100, 
         0.01}, {{$CellContext`c$$, 0.01}, 0, 20, 
         0.01}, {{$CellContext`\[Alpha]1$$, 0.01}, 0, 1, 
         0.01}, {{$CellContext`\[Alpha]2$$, 0.}, 0, 1, 
         0.01}, {{$CellContext`\[Alpha]3$$, 0.}, 0, 1, 
         0.01}, {{$CellContext`\[Alpha]4$$, 0.}, 0, 1, 0.01}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{301., {204., 211.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7553679740447884`*^9, 3.7554512397775574`*^9, 3.755537591206509*^9, 
   3.755794145194041*^9, 3.755795205867077*^9, {3.755860981761263*^9, 
   3.7558610008700495`*^9}, 3.7790461252093544`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"cd47b0dc-5ee7-4f91-a5d0-9f99bad18bbb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Omega]1"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Lambda]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]], "+", 
        "\[Omega]2"}], 
       RowBox[{"\[Lambda]", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Omega]1", "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Lambda]", "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]], 
              "-", "\[Omega]2"}], ")"}], "2"], 
           SuperscriptBox["\[Lambda]", "2"]]}]]}]], 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Lambda]", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]], "-",
              "\[Omega]2"}], ")"}], "2"], 
          SuperscriptBox["\[Lambda]", "2"]]}]]], "0"},
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Omega]1"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Lambda]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]], "+", 
        "\[Omega]2"}], 
       RowBox[{"\[Lambda]", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Omega]1"}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Lambda]", "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]], 
              "+", "\[Omega]2"}], ")"}], "2"], 
           SuperscriptBox["\[Lambda]", "2"]]}]]}]], 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Omega]1"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Lambda]", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]], "+",
              "\[Omega]2"}], ")"}], "2"], 
          SuperscriptBox["\[Lambda]", "2"]]}]]], "0"},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Omega]1"}], "-", "\[Omega]2", "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Lambda]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
       RowBox[{"\[Lambda]", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Omega]1", "+", "\[Omega]2", "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Lambda]", "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
             ")"}], "2"], 
           SuperscriptBox["\[Lambda]", "2"]]}]]}]], "0", "0", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "+", "\[Omega]2", "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Lambda]", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
            ")"}], "2"], 
          SuperscriptBox["\[Lambda]", "2"]]}]]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Omega]1"}], "-", "\[Omega]2", "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Lambda]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
       RowBox[{"\[Lambda]", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Omega]1", "+", "\[Omega]2", "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Lambda]", "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
             ")"}], "2"], 
           SuperscriptBox["\[Lambda]", "2"]]}]]}]], "0", "0", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "+", "\[Omega]2", "-", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Lambda]", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
            ")"}], "2"], 
          SuperscriptBox["\[Lambda]", "2"]]}]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7553679740447884`*^9, 3.7554512397775574`*^9, 3.755537591206509*^9, 
   3.755794145194041*^9, 3.755795205867077*^9, {3.755860981761263*^9, 
   3.7558610008700495`*^9}, 3.779046126437601*^9},
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"5e44a085-d67e-4d9a-8625-\
4d05add82953"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gate Applications with time-independent fields", "Subsection",
 CellChangeTimes->{{3.7553701016006546`*^9, 3.755370108412942*^9}, {
  3.75579406937782*^9, 
  3.755794112926841*^9}},ExpressionUUID->"6e6b19a6-e258-4830-b583-\
e8d0bcc24741"],

Cell["Analytical Solution", "Text",
 CellChangeTimes->{{3.755370885355233*^9, 
  3.755370896448657*^9}},ExpressionUUID->"b46fdabf-a1f8-49fa-bf81-\
5d567ad4d922"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"Eigenvectors", "[", "Hx", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pinv", "=", 
   RowBox[{"Inverse", "[", 
    RowBox[{"Eigenvectors", "[", "Hx", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalLambda]", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"Eigenvalues", "[", "Hx", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"c_", ",", "a_", ",", "b_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Pinv", ".", 
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"-", " ", "I"}], " ", "\[CapitalLambda]", " ", "t"}], "]"}], 
      ".", "P"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]", "\[Equal]", "c"}], ",", 
       RowBox[{"\[Omega]1", "\[Equal]", "a"}], ",", 
       RowBox[{"\[Omega]2", "\[Equal]", "b"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotCoeffcients", "[", 
    RowBox[{"c_", ",", "a_", ",", "b_", ",", "U_", ",", "\[Psi]_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ut", "=", 
       RowBox[{
        RowBox[{"U", "[", 
         RowBox[{"c", ",", "a", ",", "b", ",", "t"}], "]"}], ".", 
        "\[Psi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Norm", "[", 
           RowBox[{"Ut", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.01"}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotCoeffcients", "[", 
  RowBox[{".2", ",", "5", ",", "5", ",", "U", ",", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"1"},
      {"0"},
      {"1"}
     }], ")"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.755370911881703*^9, 3.755371095085599*^9}, {
  3.7553711584357166`*^9, 3.7553712744135528`*^9}, {3.7553715640699987`*^9, 
  3.7553715719135265`*^9}, {3.755371604064638*^9, 3.755371665330519*^9}, {
  3.75537170959474*^9, 3.75537176674165*^9}, {3.7558610260051937`*^9, 
  3.75586103670329*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"7b77e25e-0dac-466b-a4ea-7064c45068ee"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
osFqzoUzyQRk7pi05VU+iZayTc3hj2lwf2vgcuQWW1/CtZaCwAJU5823tS1i
/XLNyHP/aEtovOk962cx6ze7773EDLb/Vj867dIdEjft8Xh0/oQA7A9cH19Z
wl5vDX3m7CyEfz8avkmWsTwk726d9EIIxW79LaXlJHrGz7ripmcN/g+VK/3u
kXh/oNX2/5/HmBJW1/Tus/E+N66aI2UNHamrk1qqSNSvWxQudVkIZ8Uj9h18
wPIfcMu8U0oIq/zP+1rXkHjLc2/BsJUAFN5V/tdbS2JBiM+lYdoKHs/rsLvw
mMT0tmUuoaKWEJ0nzltez+6n8qzUi2xzsNGYpTblKYn8zUrvjLg0DB1wFLv7
jMSHC5yFGkkk3Pzp+2NbIxvvuzFlt1/wQb8m/+HzZhLLv1bra/bMglaiJS/m
BYkHg6PnGeyaCafThtKsXrH5OF91J1JNHyQDZgeee8vWr1iflPg8Vah6t27d
0lYSjxXOKblvoATh8/cumNzG+tGClsJcL2kwz8+giz+wPDW9WWLyYRL0aTzU
3vqJPY/W6borNb+Z7NivUpodJF6L2LvliPUXxvOX1O9nnSSWSX/QOH28gVFf
y/m47wuJ03UW5lX5pTAtNUvqzbtIXHa8473H3wtMAhlQ/PUb61ejjwM71j9n
HM6evJj6ncSd3Fmrnx3+yohIFMct7iVRfejfCur6EFMS8DpU5Adbr0UTTrzb
IQpBraNet36SeCjkjSbKywDHQWvJ5n4SX9zOPRh2QAm+5INQbZDVt+zHBeGa
MyBd08vwyW/W790ibwxR2mBNm/G8/rD12ytCcZu2PrQsHLQaHibxnOphH425
M0EyNHaR4RiJ3QHbnimUmEFGvPPKkn+s/wperuvv54FN5oz1SyfYfAkxK1mW
BP/nVwMjRCkc9nSu3zBOg3RXUISSGIU/Nt7WiVpmAZnjNrHZ4hQaP4SXK2Ms
gZk+JZGRoNA0wa+TOsH222YNKS2SFN5YLB/SHyKAQLvkSz7SFHoIfPlKfHbe
W+15XUSWwkv/Bf6uuC2EyztMbyfJUbi5e4/4R3lrwNiBSs5UCu8YepI6LL9v
z5bVVSlQuOSkUKeP7beDbx1ocVWicNP+PbsOfRKCfN2Str5pFFq35070+woh
+6NqV8x0CjUe2Cb+qRWA3Z+Pv9RVKazz2T1D+7cVtMpd/Zs3g8Lw+C/ZGX8s
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
fjNnXi+ikczXKW9VE0JhbuSpbYtpnDrTMOr7FSHkbqg4Pr6ExuD+K05bxa0h
U3084fhSltfu2NAewhrOPreNM3Sh8fr6N1efsP5+6tCew7eX07hdziRk5k8h
xEF5rONKltcZTe0v2PoQMzS2//0qGqNTOdP3fBNAxHWbff6uNG4oOTQlWFcA
wRsjIie70di70M7/AccKfDXKwpPW0HhBX15GS8kSNjb93WWyjo139rBzdYs5
rD08O6TMncY1QPVHh9GwAsODnD3Y/CclLUsTp8D+xuj2nRtovAWVDRYvuGCz
yXqb5CYaiVlNS2XSTcFcc7d32mYazTpqIuduMQbDIyNe97fS6L6XH7zHUA80
5wg9VmyjcVxine+ODZqgPLxr3VdfGm0PyDxreKsCsjfvuO32Y/VcuXFjzANF
ENs8/J+cP439psLQEG9pGNMUrLwQQGPzrF+frUJFYbA51IUOolH8xI9Kuew/
TM+R2841wTS6bv0XO9erm+mY88dpdQiNCsdsfp579JJ5O2zp2BNK43n5hce6
9xUyTTdDHKLCaBxRzz5Tum0pU7e52F4pnEa7TyoJmnkVTJXW0JysCJYfmY9r
2l68Y0paLEAQSeOxjgTTYZ0+puDoTpv6KDbfRuJPLTRGmat2RUL3fTS2HP9w
3WJoMmSMDFr+imavizavUzaWhdQ8c/OYGBpXVqzbP7dSCU5sCSZVY2lMuCRK
kj9UIfrFgJntYRoTveKkPlfqgVd+v+7hYzSWVTdb2YXxwDd6+ZjjcRoXqSX/
DhkjYOfywleyJ1k+7+XePpVDQaTh9FvPTrH67D219stsczj0e2dCYhKNPyc2
TX5zzQJO1Lzc6pJMY6tl046ofktIO2M1TzmVxh/JL7fdkhJApney7ss0Gg/a
2PnQPQK4IRz5e+YcjSuOzHtXeloId6TdXq1Op3HOraE7GpOt4f67kgKNizQm
nanumktZQ12uRsL7DBobYvON///9yJY9EVvTM2msLk9eltgshPdL3tt7XqZx
p395X4SDEL7oMLoG2ay/+9yTL9krgJ8/z//tzKExS8L5pPh+Kxi5P/Hy8jXW
P4Y+GxsttwTRkx4F3tdpPFLnY9syZA6yG+/Hm96kcYjI3XU+mAbtKfvtbxTQ
uOQs9PA1CZj1qkPHv5DVV+gGMW4uB8hs+79kMav/yyfjlJVNwN5xSkHRXZan
Q9r2nuL6sERjS3xoKavXieyGE2z/+F9PrbewnEZ1y7Fna4xVwaN8lv3fChq3
Dn8I1t2tCD4Jh3XKK2nkCmWjd3VLQvD67tHIKlbfxv9eV3iKwB5i0Ut8wObf
n1y/dcoAEzspN1+0huVHWz6m+d4nJrFJNv5BLY0RbU+jFks8YFIvbfeOfUyj
sfThgXJrD+ZS8LO5C+ppNK0NbfyicofJncfXkX5K4z4fm/dSZ94xxSqJo/XP
aHTg+a3U0vjJVH79+SK+kdXX0Lfl2r/HmMd3luU7N7H+H24q9T11CjQdLohT
bKHRYOY5KDNQgFa3ad7NL2gU8Y6gn2RPhy9mwXNPv6LReeG7EJkqDfgx1qL9
3xsa30hzxqVN9EA0PenF21bWn87G2tFms0DG/0/e2TbWzzGy6li1GSjPcY1z
/0jjMtHRrC0r+GDcoTa3vYPGaW0x7y/K0UAU7tbO/Ezj5Blqyc7J5mB94N3I
pq805s9eOPpx3ALmrrJ5YfyNxuJBjbHT1lbgZHwu71s3q99biw33zBPAquF/
R6/1sP6wNo+TqC6E9Y/dt2zvY9e3kxc+KRKCd+o9O/5P1i/WtpnNU7aGwG26
2r9+sfxculBKs/1DhM2+kYIBlnfvyeLj7PUDcu0twb/Z+B7b7299WwgJbXZ5
ln9o3BZ2/H2uphCSb146OjxMY6XoR11mgQAy9optKRmlUW9163ivrRVcW7bJ
LmKMxqOnP32+J2oJhfo1Wsw4je0rpB5mnDWHigGjkYkJ1p9WSAWvUKLhfwEp
E4g=
       "]], LineBox[CompressedData["
1:eJwV2Hc8Vf8bAHCrYYZK9r1GyLj3oqSS50kaRqnQkFKyIpRSkkpIVki2khEl
skIllZVNGUVGZGTfY8vo63d+95/7ev9xzmc9z3M+n4+UpfMxazYWFhaClYXl
//9P71iuVrWK0y5f+f+PgPJmquEJ6k0o4hloXSa9UvHJm0r1h3LPOotp0nxh
BdlcbWGgLVwY1Uf6afFDyipqDIjy5t2tJ61MWAWv2D6DCqGyTTmku/ji/1tu
TYKj9lMWwaRlUzk1FpdSYFuh0Ulr0pd2uzrOU9LARWOURYP0m5ae5zN7M+B+
UOspFtKLDoadk7ZZcGRwy4Xy/whIYO30n9+XA7LEgrgXad36R5vnWnMhtfr8
gx2kh6IPlMxczINukTtJI/8ICLL6Zz69lA+CLE5OEaSbl+zCJyjvIfPeUZG2
ZQKuV0oyiJxCiP0a8teZtOjjltrxvUXgLLzdn5W0pSKyj9p+BjuLK58Flghg
W3L/OuNRDOv/WlqHLhLQ0mMqMbOvBB4Vu39cS9otg/v9VGspPHGZ9fnzlwD9
sD+rpxLKwKSzZsaAtLhbicnkxXLYcj19U/o8AcV7b0wQS19A5XHwjeNzBKzp
6JUfp1RDLZf9i/PTBLQVf3QdG6oGJbmNb8OnCHiVGl02mlMDj4p4PEomCTjs
cthiZG8dlNJU5ddOEBDJWRg5aPsVxEbW8uiPEZB3Q9/lqvA3GNpd/FV/lIAn
I9tFpj2+gfvW5wb7Rghw+iZoO7WvEY5pPnKUHyJA8EkV22RrEwiF9lsn9BGw
xFeQdlmrGQojWuacegnov5d8ZCKhGTYtOu/d/puAAts78cTFFritHSWQ/4sA
M/WtO5lL3yE7tyDE+icBiTXProxSfkJoek1gbD0BM9H5it1BPyF/qjO3t5aA
/ba1fU0LP4FX7puvTA0BY+zzpoXN7XBSIlYzpIIAzd2Hd/o/6AQYhQ6+zwR8
y1pmkye6QWknX39WJtlf4DzLS+uBiMzaPd4ZBOySC9/5wKoHPtDmzIxeERA8
kzbt3tgDW2PSyxpTCNj66Lu1ZfpvMAxcFXT3CQF3a5T1VS36YBXnEPOuHwEv
c97KpUf0wS0Vy/vd9wloitZh31zXB9uFtw5v9ybj1/ZkkfCOfhgX+yrRfJuA
GnYfGsv6Acj1Vjr7xoUAod0dgl8r/oBPat458dMEZGb5d1yijUBOaZBurBwB
I4IjQfrnR4C/xnv1MRkC5K/rayuEj8D6bzVp7FQyvrW4E/sWRkBiLjnGRISA
sOogG7Mvo9BdF6D7mpuM176QyQPm48Ab4bmyk2DCM+5ab4F9E/DL7fChphwm
aO++Ze55dgLWTdesVL1mQqeT0jbixgRcihUre5/GBOGmwD91ryZg+Fydl38i
Ex5FG+r58U+CuOPcht5QJnhvbuBb6ZiEr7sjWG46McEWGmPGXKaBXffJMf3N
TGBJmivsCJyGD4aXbsRTmRDNId5Z83waVtcyJcfFmFBVbSOZ9mMaIu6d/HdT
kAkKJstJ1jtngOZgrHRsZRyG7OQzfrHOwvVTd4l/reNgH3b707fQOdCSfZ98
5P44OA1s6cvLXAD7BYWfpt/GoOfsz7Ul1QugUnb0aFv1GBi3+dHq+xdgr2zk
hEnZGGjWDt4cEF0Ex+Yz2VoFY8Cek8Iv9GARDgtN+1XEjUG0h5T2DYslOMy2
7UCF9RiUrBeJ2cH/D1YJq1YHzo4Cl5SPfLcmC74u8S0d4BiFYP5axcRz7Liy
JnNp37phsOww+cxetxpruw+85cz6A1e++Fg6y3Nhxoayp9pb+iHnMo+xsB4v
vqaGKN568xsSbzmMME7wI6uGL6vIYhd4PVs+OjMmgAfu0zu3zLUBS3MPFrmv
R/27ex5Lb28BuWs2biaKG/F4TMrzvsoG6J+NOs79UQi3X7l6aDG+ApL2qF/t
KhPCXy3phQW3K8DiYUNIVo0Qvv3hfcPXvALaZVdVG7cJoYNDncQ50QpoNHbZ
9WRaCEejf9b8i/wCn3IMqSqKm1D+6ccF4nE5RDmyjhyO2oTmsOeU8NNS0B+w
vx12RRhzzwpN7+7+CPtvy2Tougnjf0onbA1efgSdjZ3tc3eEceOj4GmfKx9h
575DmqeDhPGhAleBB8dHUEyhT8u8EMb+yqWH95SLgNt6xi6/UxjLTl6Mn/Up
hLr+2yZtB0TQbYvuZ6WTb6HKQ8M74LAIdqpw6IzIvYXyDUSOlqkI6jo6VbbO
FkCR7rl1iZYi2DJCU8PwAsh4rlNz8bYIGplojRxszoeHVmtwKVcErx95km9o
lgeH+0OVJCVF0ejraFtWUA7UKfW3mMuKYndg/BcLqxwwuLr9TpyiKCYlxbbs
1MqBg2y/vglvF8WZ38tRLmPZoENVur7+iCh6C8fZjBzOhm3mX4rXeonijRuW
i/yamSDesmA6PSCKoQPZRbWZaRArdmhFdUwUqRQBoF1MA5ELCS8vT4lixunK
1yMyaSA0tX9p/D9R7F+UKLoS+xL4+cMThjaJ4SkQ9/sQ+ALYDWmjXXpi+Ffj
V4XJ3RQYKbP0rHothicUYnsPpScC5VGbfXCeGHK6fyncfikRTM4eNjX5IIaW
y5dXhagkwqe/OxR7qsQwdYXf2jcnAcJUBFrm+8QwnL+rVuP2M9gV9VleXlQc
WZLjhcfb4+Cy1TbBcao4WiRK0f3t4yBVNX05V14c0+ZlHrMvxQJ/XWSj9jZx
DBIbWBcuGQv9LE63jh8RR3/J/NNbLkdDkL341/u+4iinqTNotDsCSraHvTd4
KI7G0UKTg+3hMMex9rlAuDg+mpzUP38zHM49m3Z7miiOif0GiX/fPYatLTXS
+UXiKDlTm/xJJwy6dt+83j8ljrzbCK5Y1hAQ5CbOvVoQR3YfWwPxU8FwsM3K
4DKLBDbfNbC0yX0IuS5HqMu8Euil5KxrbB8Evi/ka9ZvkcDlExwc0YQ/0AR+
SOy1kMDkv0w+niP34c/DP14R1hLY3fVy7ZV6H3jKNT846CCBb2a4pmwMfYCH
Qzg3yE0CZasun19t5A0jc6f2/3gkgX17DOkitvcg6ap9ukK0BOqtV5PnnvSE
UxPu/LfiJfDkoy8xIR6eUDUc105Jl0CuE0JHExl3IaWzy+liuQT67ep5d/nL
LTA/xWz+UCOBjjv4tXyn3GHDj/80+RolkKVjh3uZtDt4faWwv+mSQFe1Uy4F
QW5wrvR81PKcBCrs1dj0wNcVxF8OfA7ZIonDiR47NgpehhbZOdleuiTm2Qxv
iehzgsDE1QFbNSSRrT/M72SaIyzGypv81JFE587fjNEDDtD28OKQtLkkWgWw
6B9qtIFQLvdDrpaSOK7K4xhQZg0HHgTkVtpJop2vc5dMkRUUeKZ7XHKVxFsr
FQcdiy3h8dVx/oJgSaz8JGVWo3gW9Cf+ua6NkMS9I/MWFFdzYHPk6zCLk8RP
f8xWq9eZwWUbesrKC0lU/m/xR3TCCVDoA65jmZJ4RDFi35jEcei2OOL8PE8S
qTWuXSwvTeDwqSs79Eok8cHXNz+de4/C6h/34uMqJdG4KPVUbdgR+HgsjJ1Z
L4mDVzdea3l2GJQN39SHtUvi3YeXNIZ69KC/qkxtoEcSz7n7SxS/OABx+1qi
tg9K4uSF5FBpv33ABbPnO6clkdUw2TUgYg+47VFYW7AoiY6P9L5b7wD4s/d0
ZggrBefuhXm/894FJvuDTS6upeDDm+Vv+Lg0ofRgyaLOOgpaMk6tsa/bCgyD
mQRxIQra7Elgr6tRhfhD8gfmxCl4nPCQucRFA54jZuNfZShIoNm/Y/MK4H7s
4eM0RQr6DLjMHTaXhSGT4h3eqhT8urxG03IHFY6fmO4216Tg+xQWGwkJESg/
JeerARScmG+AjLeCoGZ+Spl/PwU12PKWBn24IOFsUNOwIQU78oItmO6swHf+
s1uZMQX/5a9p6k6a0fa4MCX51IyCzUmVjZ+l+rVHrTd/uX6egkev/Kldt1Kt
bWZ30uGIHQXXRpWbxM080K6yDxRQdCbfX2zN2SuZoa3h+Okt+3UKzlDU6pUN
v2s/d5480+VBQWVj3fUHeEa1BV1kOd56UzDoksFOLfcFbc9rJ16FBlDwjdir
lhdRHMC8HnDE/hEFDb+N7ko/xgfmNz/O7Y2m4LVOlt8C8xug5tbEE4lnFAzb
eGBxVb4YaN6R2TufQkGlCxMWUTlSkOp5fPhbBgULD0cZlLPIwQZv/5BXb0gX
ORauqVIEr/tF23wKKSgUsf1tFjsDJh4QHWdKKOi+4ZmbVbca1AWZKgh8paDu
Tx7NPv0dsDPEr2HkOwXf9XWqvWrXgpePPlwr76Sg/AmTNTuNEXwipUpujFAw
QORuJMdNXZiKNrE9OklBt0affUPv9sO5uAe8Sn8paL8m0LNaSA8kv80pE2xU
tIrQE/NUPgymR/lZzFdTkTtTKGiLyxEIatrSXMVJxYcNeY7ruo7CYov5zSR+
Kj5P0n1V320CP36WfjGVpOJyS87rlejTwHu6M7pUioqJaiVi7y6dAd3OWQf6
Ziq+qe7+bmNkAbm/FAQ5lakoqJHc0JhwHoL7gs8W7aCiobnR8ucxa/hi9VJ1
y24qVm8Q07ITtIXlgRKOSKRiiVpB/gOwA/uhmVfOB6j45P5zCcVsezgwbjYv
bUrFBh5T57ERZ4jf4N189yQVd/9MYnQnXYaZXelZnaepGF2esfzL+AokBCzZ
RlpSMdZSuC6x2AUW5Z+0cV6m4uBae6rSF1c4YlSeZ3OVikoldhF7Qq5D6vWx
0LLrVHQ3j6CPmd8A4y9aerdvUzHD79OZZbabkGHZ9X4igIrrn6Tx/XfTA9gC
VkUeCqZi7rGKzennbsPJHBWXV4+oSNGMMBzWvwOrWO4oWkVT8XcBM4R7oyec
fSoZ15pCRbO1ly9HcnoBf5uFx6diKvqKhjaOH/AFm5UHJ8XKqfh49Qed3FZf
KJLL3upWSUW391GBuy4+gIuuLOOqDVS0W633JO6RH5QKJp5J6SDnc2rJOGA+
AK4d6tUOmqPiF4J3yxR3KLSVWrGaKUuh6xVx2NESARN72kVv06Xw704PVxvV
SFhTYrQ1QU0KD5k0eJiERILG5522fzSlMGWVkL3LoSgI/8Bf77JPCk1Etifm
NEWDUV5RdOBZKfSl1cWIsT6BipQNjI+hUvjZMdsbrifCL9kAvZ7HUqjcevZe
UXYizCavWLJHSaH0CQ6jqNFEkE0aidB7KoX+ghf+WVsmgVd88dL3NCm0f/V8
g7VJMmhHXapklkph559jct/1UiDfr/wsdVYKQ5o8pOtvpsFL/VrhB3+l0ChA
XfPTF3L/wtPUNL4khUmVdq0igq/AM7R7/wc2aaymV8ryZ7wCw+hF2nF+aZRP
7BSY7U+H3heMlUAlaTx/d62ep30m8FU+eTZ/Xhpd9GsvVv/OAZtVrj0NDdJ4
XW0i8lzTWxClVLcuNUpjlG5Uag7rO2jQlPiq8F0a34/apimrvgONS18+enVI
o4pO266E0HewunljnMaQNN755nPj1tH3kJJQYBrPKoPX2/zpk+2F0L/rb43j
VhncJaZid4jnE1xwuZXPEyuDDk4GvCIupUC3VWowPC+L8x5Fcvvnq+GroDK3
647NuO3LqxnN8Eb4kOkVp8wuh6yxQprpu3/ALVbFI3Vdcujbc7hZKLQDuDrd
DzrlyaPvNuUrHK49MJAqFf7MQwEZX6+JHZ/shXAFEY73pltQZF1uPSV4AEJj
bSrPUxVR+NYLg/mfg2AWfqaBZ1ARL7zP/eg9PAzib7jEHEYUkfVk+cP5yWHo
bnxrWz2uiCXHrNptFofBap0gq++MIuqHsbZv5x4Bp4AK9RVWJfynwLE2WXkE
vDzpMZPiStisF/Ut1mkE0i6xWv04poQFWky+OeYI/NVNWXj2SQmbemJNwnpG
wePDM+/yEvL52F62Q4OjwKIWyztcroRLWbr/2JijsIYSIqVWq4QG/Z9qzy2N
gtCCm155qxJ21ZTf79s4BuqvDWOGJpRwXTS3HLv+GDhtnNFUlVHGdwLUXTGZ
YzAVyCw1lVPGga1Hnd7ljYEr27Ch+xZl5Pl37UlT4Rh4EF3nyujKaFwz2T1f
MQaB1ZV+plrK2DZdVLyqewxe3o5ru2mqjPlH+duU+cahb0DHrfSBMpqzZ+6K
thsHnWcNSYqBytilWNb/wGkcEk6a1YcFk+0v2B29cm0cztZekb4QoYw32p3s
VT3HoT07oY49WRnFr6KRTdQ4NN36j7rvkzLuGrgelFA+DqUChdWVM8p4vnf+
ja4oE6Rq983Q/yrj7cH4AlsKEzx9GiWjl5RxRPadoo8seV6eH7pqx6aCghcq
zqTRmFDYuUmSk18F6TEJr5/rMCH3hauLvpIK1rM2TphfZELSblWx+vMqmP05
LrCcPG+XHubyXrJSQfPUptdV+Uzotegb2WKngnfFHndUvGeCjFdEoa+TCnKN
7DLOKWHC84qFU3hLBf+Ne/lqNzIhxag0+k24Cv7S8H+mSZ7nK87FsfRGqeCK
9uuPnVNM+HPlmh1/nAoa8CY2uM8xQS5cTtMxUQW3/ZYse/6PCaltAa1ymSro
JsLbkMVNwMvzxkKxlSp4XS6CkShHQJWL8p2qGhVcFjFv7NtCwJD3qj9z9SoY
JZpxmKpCgELq23zjFhUsVM346atOQNqImCnvbxU8niTKy4UEvLra/9hzUQVj
thxpHDxBwOv7rgK2KjS8p1Yc8teLgDGtM173GTRU4uxjsbtPgPKM7nSyOg07
/WZsGx+Qz1tu+N6zg4a/x2U3hAWR/YM30Wb7aVixsLa2JoKA5wsTlMMWNLS9
vmZc+AUB/dltoZcsafhvQ8JR+TQCZOyKWQOtafgySDuenk5A0o+QvkoHGnle
th5TySLg2Rvaiz1u5PvX1e//XUBArOMl2rZHNPS7ZWok/YUgz8cmz4zDaRhE
j25vqCBApHMXv0sUDc1aj+u4VhEQrc89lfmUhmvm3j3PqiUgQv5VvsIrGprP
ZyS3NxLQ8uuR3IHXNJwVPc16vJmADZE3o6yzaSh5MEWjtoWAMA69m0kFNGzc
X7s5uZWA0N+DWuJlNBRoFFzD2UXAt+ivr3dW0PCg2z5B418ErDvyVvJUNQ0H
IuonIrsJCP7kyxL5lWzPb2gzTy8BQXGby9d10rBgm/CFjD8E1B3j3UbrpmFy
et5S+SAB3FyzKYa95PgrFi60DhEQ4Fb+wH+Ihpq7vicOjxDwwPSCAfssDQ8d
+FBZxiTny6jT3PovDamqmmKfCAKK9EydKpdoGKs1L50zQcDU7gOPAtnoKMrh
dejeFAE8msVJ46voeBhvOp+dJkBebUeeEScdO+M5dbfOEGAup9S6np+O+/2u
sNfMEnCD+nzIdT0dh46GjPvPkfMhKrHYKkTH0g9NfjrzBFTyrZN4IkFH1sJb
jU//EtC71o/2H5WOAkd17uACActsrHhOlo4swRPtHaTV5qcsZZXo6N84krS8
SMChSYdrvjQ67knO5fVaIsButP/+kCodT+ackmdZJsBr4EyU/jY6zmMqcZ30
0+4fLzM06Tg+cd7mD+l3P40K+bTo+PX9qcDD/whoaq6qvQx0nB0/czaL9Hj9
nq4mHTpm7dDpXvsfAWurCplb99MRk7t4T5OWKVVnidIj+x/INZJCWrsoQ2DB
kI6X0lOvDpM+WbBZ5vQROqqIPH61eYWAq9nxWz8a01Fxb16wGengV5v2U07Q
8enUJMWP9MvnoSfumdFxncH2s5mky+I5L/adoePVGhe9/9+f/4r2ct93nlwP
vcjf/aQXwpYCX1jR8dtCpNws6Q0Prz3ltKPjl4uOwv+Rpj0Yz3RwoGOe58a3
/7+/17tnU1zvRMcSz2C2RdJWt7ob6S50jFzdsThG+o7ryb5HrnQ04GRNaCMd
49w4M+1Gx+vtnFNFpPMu6q8+7kG2L8c2GUP664WyTe/u0jF1auGJM+mRM1pb
RL3pOJnAMbebNMfJ/J0evuR4xzSXOUhTjtEMf/nTsX44O+v/9/U7DV+cwYfk
85wB/LdJm+ynOieF0vHdxgFJGmlnjPHkCKejhNqf9lZyPQJ2CobZRJHuytN1
J52yNTC5KpaOC8xb5htJF9M48hXj6Tgac1E6jVzfWem5VuZzOkrv83pfSMYH
v4Tz8JGXdGyyFw3UJK24aWgxN52OW6694c4i4+kcd7vEjVw6xpsOivqS8ea+
ypj+M5+OvZJcr/5/Xx+xUou73tOx/fXuYSBdM/3xwspnOoo3c9/sJON7W2di
2oN6Or56cnnwI5kf/DS7v1nf6Fjz503pFJk/Y3dpB9qa6Xj0YfkeKdLPZT70
K7TT8cWLeGUHMt82OLRQav6Q67N+4VPuGAETRbFOU8N0pN87WZo3SuY73/mP
ouPk+xPtLmWT+eyTO27mME3H1VVaBeFkvi96sBusZmHgxdlMZYF+sp6n2LjE
sjJQIMjjSg9ZP340VMfQ2BlI2ep5Lu03AbnU0KHjqxmo5CwOCmS9sS8X933B
w0D56Tae9p8E/OTWKDkowsCIP0pWfA0EVGyNGeoUZWAC/6ogtzoyHs4sr7si
zkDjl+y2nTVkfcsqPRtDYaD4ulU7HlUScNDYaHl4MwObmrMtsorJfIu12x6o
xsDqP6kmn3IISC2rPUvZysDhpTOs5WS9Dh+j+b7ZxkCJqYxLZa8JuKw929Kh
ycDKhP1eWWS9V+i956IMDKQ7nS/WSiTr85a41/UGDHzfKnVQOYSAmen9Kd6H
GDi1tuxAHPk9Mfo09WSHEQM9i/avsAUQsNpYPyjlGAMN7b7HFvkQ4OqxYH/7
FAPN342ltt0k4NjXEwoqtgyc/MG/Ld+SgMwYdmqfHQObT4gbZlsQwGmVtSnG
noEax9YznpuT8fZ39ZpVTuR8n/Wwun6cALp0wUDnNQYacHC8LNcj66XrhuQg
L7K/zttHOelkfYLiWB0fBuqqPfYOUyLzm/NS2N/7DLQ/r8O6QYGMt/iye1b+
DDRlbnnDKkXAcKXLOa1QBt6TKab4CZLzL9ooMfaUgYV7FuJ0Zphwt/hhtMF7
BpabDte55zJhpKs4fKGQgeyvNeu2ZzLh+NJ06IsiBiYypJSYaUxQ1jDzZy9m
YKb/nXUHEpnQli7n/qGCHM/OE2lpIUxQi/p8WqmFgULvX/SqO5D7C8dJSW6C
gT66w+scJJhwNFBW7P0EA/2Mc5dOCDOh6OWJTbZTDGxU+xCgvZ4Jj/s+riub
ZWDo/vK4v2uZgKcCWG4tM9DCoqOGOjMOsboyvSOcqlielOe8t3ocDomZptTI
quJqh/X/esn9XXQ/rfi0nCq6shrWOl4ch/7XazvG5FWR22PEZPrCOHhgEf86
JVXMTJ1LYp4chwxrGQ9jVVW8IcBnm6ozDlzZk8c6d6tiVdVqD/GN41CpG8zC
PK6KvuRXW61gDPY4VZ4W8FdFYLWSDRoehcW24f3lAarIccpa5kDvKOTt5VG7
EaSKbM1uKcvtoyAncnRtV4gq/vE8gifqRoGnvD3vZaQq1h58Sa/NHIU2ESYv
PldFjabTM9kuo3D5y4Zip8+qmMaHYUFzI/BM3FK2blYVfeYO/TAihkG27EXk
4dNqeEL+4KV9LYMQqlKq2PRJDQ/WbG7qDxsAm2mOxmpFdVyIOei7stALljlT
VP8QdTyGy8lpN3vgkpfxsv4jdfx49nKBg1MPuBrntfI8VkfjPcfDVC70gN+s
a3BopDq2OWUVZRv2QOaOhaWop+rI91v2Rj6lBxZKVn6kpqtjaqvlZ/fAbght
4nlYXqmOg/voFR0yvyA22dHOt1odVaSuNtjy/oLkaw17D9aqI686X/3MXBcU
CIUu1jaoo43Ki58CNV3Qabbervm7Ou7sbLY5dbkL5PtE9vb2qaPFoVQ2hY+d
wMhzl3w+oI7xemJJVamdsPN+x4L1oDrKZAgN24d2gqH80+zhEXX869wck3eh
E1wcqJKTk+pYZx794QxXJ3ho3VvInVZHNr+bdTwzHXCft7fl2qw6Xsyhd33s
6oDorOTAv3/VUd+aoSiX0wFJnhy2hYvq2LLJ26MrtgPSj1rreCyr40/eD4uR
Ph2QJ10hof2fOj58+zPrmFMHfJqWW1hZUUcxx+5U/pMd8D/w/N7R
       "]], LineBox[CompressedData["
1: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
90psfdJ5eBA+zOxcXF1VQjfdqGcLRoPwP1TxrSw=
       "]], LineBox[CompressedData["
1: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
j212A8IOB+RXFsqKQeqF8ifNZH0U0t7pXV0pBnmu9N4PCXcMWx+xVRODoI0r
Z9wI24ZGxdNvFYMHF4U5sd8uUa/yol6X8LTpLfR/TTKfvz3cLgZ3kixfY7/9
9km7ofO7xSCRtngc++0WBYscplZiYDkl4YD9dgGGO0pStmJw16YyGPvtX3du
MBg6LgYHG6ddsN9+7c7Xo8UnxcBqwfQJ9ttNu0/6xpwWgz1OCW9Rf0a+8tkG
3mKwdY+BOPpfPeGWX1N+YuBWHh+B+tV5EsueeUUMVgyHKqK+txju1Dp0TQzm
w7JbMV/c+JvZkfumGGxq8LuK9XENz3e33t8Rg7/RPJ1Yr1nDfb7sdLIYyPPp
+XNiPejh2nH5R2LQVBrbivMvK7f1yTU+EYPWLzsd9mO95HuyeVi+GLAVKJzA
+XYJZoGnAyVioPj7XVofYc4TE04vWsTgxKezF0vIerItZsc5doqB8OMX+ZPY
b7914pN4vxiUs7ea47w2nZrMZOWIGEQpDHpZot8sa5T3mxaDR7Kstv6EZ2xu
7FVfEoPwiZ4dWP+YmDAO6GAShyphutQPhEeu0eXEcopDHp9uI/ZfBhQKW40E
xOGvuIsP1uf63pzmnhUTh2KjCW30B10Wq7Ufy4pDhaZrP+rxz0DHSduV4vCM
x9Yd/UVLcMIdXjVx+Ef3sB7jbZOURXnJenHYX2RkgPG2IZ9r+uwWcZB/mMtW
hfeX2UfFlbriwM1/JeQp4aouX4smY3Hoyq3XuYrx/NLGoIhd4nCBc7jyv/kn
oeFcbUtxuO9R1or1vTcGR3lT7MTh6aOul1j/fNUiprPPWRxWeuhtwPiaf+6b
K7OHOJxgZErAeYXsNL0KZ19xMLn1oBPnczK052ckg8XB5gNHShnhtIY8pZoI
8v185dMxGF9cXa0uR4uD4FWhEpz3u8ekeEUjXhz4fgl9xvgUf+93XleiOHhy
nSjB+BW74XbH7YfiYOg9uQf1GVW1i98kWxxS7Y0Y0C9E2rPC/HNx2BTPo4vn
DyIW3rs/KRQHdcH9R/+b94v1vn+kWBy+bBGKRX0Gqq6r4v8sDotxeqOY3/mV
/Z37UC0ODzmvuqE+fWxSV3k1iIMUu0cb1ku8Jg4eUG4WB1YBxmXs75y5Jhj6
q10c1KxlHTnI9bkrVL241kdeV1WIU8N69ZvgLp1hcj2xSpPYT3Sw2CY4OikO
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
k3lQeiFlHuqz0C/RtQ+kEficN3wA61sbr/1LSczkQU9UexLW5/c9eD234QYP
vD5sNMd88vrr8HZ6Lg+e+C3ycEJ/PuCoa5HPg2CbgX14vkfv5Oobp+8R//+t
fd4U8bzmSCnIFBQS91OfJ0S8M1S+Hn1fwoOwOrcLuB8b8p90zavgwYol5CHU
43HWTdu4pooHleaMMdT/CDM5nutWywPmkIkh9nNk2ZspJNTxYK2sz/Fp/RAv
7oknDQR+TmqL9WE+eHp2788mHqS7S+zCfE8stmsr7QWBj9bEKuS/mdcL75u1
Efjtj/HF+NqwMFrlVDsPknZlT58f6fzEJTivgwcj8zlr8f0Ie6M31PUfD8qc
3qxDf549uMRC+gMP5iovC8T544bfY2WrPhLfZ6Y2fd7eoNQzqmsfD4Ru/07g
fiOheiPyyiAPzo7MO4z1KbYgaOzxEIGHcb4kzqduhp02P77xIK919BbOr7pu
16iljPFgD+/3baz33vT+eDFokgetoS5j87F+dqb8d+4UD/bZ5udtJOzB2MuO
/4nw4SpzXi2eT8YpMlymM5cPNvmLS1E/yaielOgswYdqOwkp9F/uHZMz46T5
MP9GwyXUr4z83Or6SJYP1y8EpSF/kvMnp+X7Aj4UX1gYifX6p9IhOmRFPoQE
Pa7Afr0vqnvSTZT4UMLwfoD9fFJCbYlAFT748DJnIX/IXSfndVuN+P19utsx
njYyHXzzlsIHnZYea4y33R1r1kkw+PDqY98fxHvk4aRsbTYfkvk/acgf3g4+
Irefx4dFkxu6kT/8snr3qWAhHxIORt39OB2f6H/PWMYHvaW37+G8qNstrlO1
Fh+SUq2X435z00H+5fuVfLD7opGA/WCDi/9s+LeaD1tdNKyxX5L1oueBCvBh
ynx8BvZTZunevbJrIx/g2gevaX2MnwnixzbxQcLpzaVy7A/MPXU8zogPir0k
A8xvriub2rSZ8uH04eXWOE/f27qyadSCD/vLfupifk+LIK2V28mHWnnt+5j/
Z058W7ptDx/GTCpZ6M8/5r2Odnfgg9WnKf91hE1xfjgjYi8f/FkZosg3OCzN
8sp25sOmsd36yEekvzrfU+fGh9ttg3dRn+FDlI95rwcfpDut7qIehNqGPY9m
efHBTDX+HOLb7s9GLcoRPuTZ2vohvlPu8m+s8+XDW8H2af2eLleFRXZ+fEiL
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
O3y/gr7Ff0ZHKTScdHqI98P/ASZt31w=
       "]]},
     Annotation[#, "Charting`Private`Tag$4605#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 19.999999591836733`}, {0, 1.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7554313209920344`*^9, 3.755431335049161*^9}, {
   3.75543136917943*^9, 3.7554313907521677`*^9}, {3.755431503079241*^9, 
   3.755431702172301*^9}, 3.755431774470039*^9, {3.7554318097048616`*^9, 
   3.755431860959343*^9}, 3.7554512675176706`*^9, 3.7554534999480724`*^9, 
   3.755537683761718*^9, 3.7556142653299065`*^9, 3.755616187833338*^9, 
   3.7556191832787523`*^9, 3.7556237242760615`*^9, 3.7557941579387784`*^9, 
   3.7557952201791563`*^9, 3.755861045952981*^9, 3.755974174660057*^9, 
   3.779046131301642*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"4982c213-c497-44e6-9c77-1c665f526af3"]
}, Open  ]],

Cell["Numerical solution", "Text",
 CellChangeTimes->{{3.7554496610810895`*^9, 3.7554496638309927`*^9}, {
  3.755451270212922*^9, 
  3.7554512711191497`*^9}},ExpressionUUID->"7196af7e-40d6-4d40-bd2b-\
9c335a833596"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H0", "[", "t_", "]"}], ":=", "Hx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}], 
      RowBox[{"PauliMatrix", "[", "1", "]"}]}], ")"}], "\[CircleTimes]", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U0", "[", "t_", "]"}], ":=", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "I"}], " ", "Hx", " ", "t"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7559742743075747`*^9, 3.7559743667120514`*^9}, {
   3.7559744093746386`*^9, 3.7559746647179403`*^9}, {3.755975066588846*^9, 
   3.755975092504675*^9}, 3.7559751258118453`*^9, {3.7559791213141036`*^9, 
   3.755979149649622*^9}, {3.7559791993584166`*^9, 3.755979230638257*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"50f54617-b020-4bc7-9297-9ccd820c0684"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H1", "[", "t_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"H0", "[", "t", "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"UnitStep", "[", 
          RowBox[{"t", "-", "2"}], "]"}], "-", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"t", "-", "6"}], "]"}]}], ")"}], 
       RowBox[{"Hp", "[", "t", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]", "==", "1"}], ",", 
       RowBox[{"\[Omega]1", "\[Equal]", "5"}], ",", 
       RowBox[{"\[Omega]2", "\[Equal]", "5"}], ",", 
       RowBox[{"\[Omega]", "\[Equal]", "5"}], ",", 
       RowBox[{"\[CapitalOmega]0", "\[Equal]", "8"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H2", "[", "t_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"U0", "[", "t", "]"}], "\[Dagger]"], ".", 
      RowBox[{"Hp", "[", "t", "]"}], ".", 
      RowBox[{"U0", "[", "t", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]", "==", "1"}], ",", 
       RowBox[{"\[Omega]1", "\[Equal]", "5"}], ",", 
       RowBox[{"\[Omega]2", "\[Equal]", "5"}], ",", 
       RowBox[{"\[Omega]", "\[Equal]", "5"}], ",", 
       RowBox[{"\[CapitalOmega]0", "\[Equal]", "8"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755978804607238*^9, 3.7559788049822226`*^9}, 
   3.7559791728130875`*^9, {3.7559792505844316`*^9, 3.7559792805041895`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"1ba3095a-8e20-4d82-aaba-585855f98885"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"H2", "[", "6.", "]"}], "//", "Chop"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7559779046060257`*^9, 3.755977906918475*^9}, {
  3.755979285035325*^9, 3.755979345616014*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"1e112d04-4340-48f8-88e6-1ef6ff067f88"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       RowBox[{"-", "0.19626234829221187`"}], "-", 
       RowBox[{"0.3502576231165153`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.9522257754479665`"}], "+", 
       RowBox[{"0.6744267101613887`", " ", "\[ImaginaryI]"}]}], "0"},
     {
      RowBox[{
       RowBox[{"-", "0.19626234829221176`"}], "+", 
       RowBox[{"0.3502576231165153`", " ", "\[ImaginaryI]"}]}], "0", "0", 
      RowBox[{
       RowBox[{"-", "0.9522257754479667`"}], "+", 
       RowBox[{"0.6744267101613887`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.9522257754479667`"}], "-", 
       RowBox[{"0.6744267101613886`", " ", "\[ImaginaryI]"}]}], "0", "0", 
      RowBox[{"0.19626234829221173`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.35025762311651526`", " ", "\[ImaginaryI]"}]}]},
     {"0", 
      RowBox[{
       RowBox[{"-", "0.9522257754479666`"}], "-", 
       RowBox[{"0.6744267101613884`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.19626234829221179`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.35025762311651537`", " ", "\[ImaginaryI]"}]}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.755977907184059*^9, 3.755977948091784*^9, 3.7559788094571667`*^9, {
   3.755979292887322*^9, 3.755979346397205*^9}, 3.779046140702675*^9},
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"970bcf84-01f3-4bcd-91a9-\
f2d04e475a7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sol", "=", 
   RowBox[{"USolve", "[", 
    RowBox[{"H1", ",", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}], ",", "0", ",", "10", ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Prob", "[", 
    RowBox[{"t_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Sol", "[", "t", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Prob", "[", 
      RowBox[{"t", ",", "2", ",", "2"}], "]"}], ",", 
     RowBox[{"Prob", "[", 
      RowBox[{"t", ",", "2", ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.755433434741723*^9, 3.7554334653970127`*^9}, {
   3.7554335370972395`*^9, 3.7554335772474403`*^9}, {3.755433624981835*^9, 
   3.755433655226096*^9}, {3.7554336894546785`*^9, 3.7554337784017053`*^9}, {
   3.755433834412331*^9, 3.755433835912283*^9}, {3.7554349102040324`*^9, 
   3.7554349565775614`*^9}, {3.7554350293938103`*^9, 
   3.7554350320343513`*^9}, {3.755449666572225*^9, 3.755449692764825*^9}, {
   3.755449788281187*^9, 3.755449986007476*^9}, {3.755450023301347*^9, 
   3.7554500234732065`*^9}, {3.755450879184351*^9, 3.7554508957977886`*^9}, 
   3.7554512826344037`*^9, {3.7554517116907625`*^9, 3.755451720264437*^9}, {
   3.7554518329884243`*^9, 3.755451833073952*^9}, {3.7554519477410836`*^9, 
   3.7554519648576417`*^9}, {3.755452189460438*^9, 3.7554523039128*^9}, {
   3.7554523474140787`*^9, 3.755452405969756*^9}, {3.7554524838760843`*^9, 
   3.755452561964416*^9}, {3.7554529643710527`*^9, 3.755452973556521*^9}, {
   3.7554532877620564`*^9, 3.755453320493805*^9}, {3.755453413264016*^9, 
   3.7554534344853554`*^9}, {3.7554547846030245`*^9, 
   3.7554548276350603`*^9}, {3.7554548703934374`*^9, 
   3.7554549251632023`*^9}, {3.7554549711972*^9, 3.7554550304756584`*^9}, {
   3.7554551049609632`*^9, 3.7554553345269275`*^9}, {3.7554553650316467`*^9, 
   3.7554555012617693`*^9}, {3.7554560291629896`*^9, 
   3.7554560300536118`*^9}, {3.755537743505595*^9, 3.755537866778552*^9}, {
   3.7555381790100355`*^9, 3.755538185119257*^9}, {3.7556127875528045`*^9, 
   3.7556128027196407`*^9}, {3.7556133011916065`*^9, 
   3.7556133144255896`*^9}, {3.7556189965793147`*^9, 3.755618997579259*^9}, {
   3.7557952483819385`*^9, 3.7557952493975363`*^9}, {3.755974235467576*^9, 
   3.7559742677077446`*^9}, {3.7559751790664225`*^9, 
   3.7559752029090943`*^9}, {3.755975233292983*^9, 3.7559752871180944`*^9}, 
   3.7559753419066243`*^9, {3.755975387943153*^9, 3.755975398630337*^9}, {
   3.755975450527439*^9, 3.7559755011556425`*^9}, {3.7559778785209756`*^9, 
   3.7559779019498587`*^9}, {3.7559788229098454`*^9, 
   3.7559788505324335`*^9}, {3.7559791823257833`*^9, 3.755979187249447*^9}, 
   3.755979372906004*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"c240d22e-df51-4085-b762-5818b9c8b215"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
oGLh1bigSMZPhI5YhoIc4D8828gJZOzzNdX9yZgDC5MXmkROkXFTeVtuqm02
1CRlN51TJuMH3cKbrZtZEGTO22x6noxB3Y46mYlZYHHIvvm5GhllKOLv3W2y
4Pjkl+YITTLaV3ol3LqcBdxJJ1pKtMgYWrSefPxaFoyYRbX0XyKjjqf0cLdb
FuQJ07cu6VPj6foz20jJAo+JW608V8i4o+3bzwiRbDBKpLRKGJMRtt9wzUnO
Bgkz0Tb1G2S8IrtkjMo5MGSxx/qjKRk/zuqd2s+ZC953SQQuczJyr5x9f+RP
LihYM2dZWZKxmungytRqHkzd39Bqt6LyUeSPLd9ZACEP5xclbMnY/T1SZfFS
IZx9/OOd3yMy0pF/vElPKoJY5+ZPWs5k1P6YXTv+thS0n1bYZT8l47Mf95VO
7ysHGtec7aQXZBR7a1o9U1sBV91DDXo8ycgRHPNTMqQKtvtbDuoFk7FHgIEl
R6YO6gOuuRR8IKMq1+vWyD318DBYZ8+OCDIedCq4/5u1ATrDFG98jiPjedtD
Mu39FHgWKUGnkETGjp1PtO+WNIJ4zL7YD6lk/NJu8jHxfRO8TmQfu5JNrZfY
6shk5RZQSNl6WZpH9aflLf2L2AqTab8P7i4i47aO2HNfeltBOfur+VAFGZUn
gjgOn2+HP7ntrFBDRt/eyCnf3+0QU1CTEllPxnMqzxgaVDtgqzR15norGZmd
ZiOXBjsgvSLSp6qDjMmjnwrH9nSCUfU78b09ZCySNHr23qgT2Orc2137yLhA
YKOnC+iEogYnmx9fyHjmjnfTzvpOMG+yJp4ZotYr89v1ocVO2NZ6MzvuOxnd
m76mX9pF7d/t+jqMY2S8UN8h43G8Cx50qf25NUlGZ0d949cGXbD3EwTW/ySj
ubtjnu39Lujo+09WeJ6KaeT1DNy6wOWLcJ/7IhnFP6/7X/fvgiODfPaTS9R6
p9GpTw3tgoFh7p0qa2TcVRBPvBHVBV4j9MXJf8lofUrVII2K5cZWDNloeNGr
4mp2SVgXTEz83LhDz4vrH700ywO6IGh6OKyZiRcvHi7UGffogjOz3SfE2Hjx
UcZdE3OHLlicbxjy5uTFtBb+UIfbXRC9WPJ0lsCLH+Y2Bi5c7IKLSxmCmmRe
fG5/89XeY13wbyW2Kn07L6ZO/t15mK8L0taDTbj5ePGT2SRD6N9OuLL5mt5G
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
Vwq8x46EpRjSsFxi3/2c5hJw85p18Dal4X7JymsRecVg2HBCRt6Ohp1UT2Vl
4Q+QFctD67Gn4Ynt9T5nQt/DKptscqwDDeUTrMae8L6H4hnelSvO09DWu+i4
IVchbKO/7ut0pWFMfmN9OlcB8LttSA7zpeFLowNT3qqvwB6K4zT8afhbalu1
Xmk+lK1yipwJoCH7U2XIfv188HhUdtMmmIZrt5eIpju9hKGqy5a7I2iYVF1y
xuVVLlSKfRFnPqRhgZpssipXJtD7vESSEjn9uWnUle55Ad7ZMgImTzjXk9Ny
SrwzQFnLZ6HsKQ35jz+3oa1IhyTnbd/jM2ioe4yi8FDhOdwovv1Au4CGNYtO
k6Y8STD8ozhq9h0NK44Pn2x2fALG8+MRz9/TsE1yw+mqb49BTvVkME8xDaN/
ugdo2ydCW4a0R2ElDWnHSzMaReNBs9r0yrlPNDRZt0u2cl0cZPWHXSZ/pqHh
K8/EaqFYCCDGHVzqaLj64VTRCmoMKMZ8PLWlhYYCh9X6H124Bw/zx060f+X4
ZRYTefRuJPA1bTwe2MqpG+yw3vj2LvziD9Pp6aBhX2Tu6D6RCAjzNdkT/5uG
c3LctvyUEJhODFU73EPDqabl8URuEFh/KFKZ7uXUx5MVHxsEgtqM1NZjgzS8
96lsYDDXH/qd/0qsGaXhcPPfPZSuG2AQKkUp+EPDLgz6/PylN7xPPUG2G6Ph
ct0Xj/cmeMK9ng+CZZM0XOATDEp6cRUWuf6uuTRNw5bJrfkeLW7gICHFJznL
ed5mGQsXYVdA0xAuzwUaVm0/1Nr++SJkXPmwILPI4WtjXf7kznkgRf2Z+bZE
w9ve7fWTuY7gm8uY9F9GYLbVXNebJXtg1Rv/VeQhUCd97v7o1bNgwgxmdS0n
UCFFSfipmA2Ur/owdIeXwBe2Oxe/D1jBtk1/+nbzESgRnE/s+mgBcVqM7uFV
BO4bz171g8cMVlgb/3ywhkD3b7G7Uh+awMUbwR0HBAh8X62v9yzMCDoT3n+b
WEvgwqTO4K9GQzj4brQpSYjAh7SGj2YORyGvld5wdB2BRiyGysE8HZCYNKpZ
XE+g60qId1U/DMHrgqteiBC4XDrMQ9v5AExse192kkygr6zku+YjWmChO/qR
T5TAzsC7FuubNeCzA/39azEC12cLhq/l1QCVIKO3NlQCm0eFQqt69sHjlKD8
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
Iq7qYxULisalZ5eWGEiL2jPpXM+C/wFsO4/8
       "]]},
     Annotation[#, "Charting`Private`Tag$5375#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ioHSGcXFf/8Y2Hnxy9c082j4H39Kh/g=
       "]]},
     Annotation[#, "Charting`Private`Tag$5375#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7559788352712517`*^9, 3.7559788510011654`*^9}, 
   3.755979184772086*^9, 3.7790461413346434`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"b1f7a048-be5c-40d6-b43e-983743e9bc87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PauliMatrix", "[", "1", "]"}], "\[CircleTimes]", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.755978975750478*^9, 3.755978997270811*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"37bbfab4-21a2-4527-9440-1103a32f927f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"},
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7559789919897065`*^9, 3.7559789975988936`*^9}, 
   3.7790461519698815`*^9},
 CellLabel->
  "Out[44]//MatrixForm=",ExpressionUUID->"bb259538-f9fa-46d4-ba3a-\
cbb6ffadd20a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sol", "[", "6", "]"}]], "Input",
 CellChangeTimes->{{3.755978920054222*^9, 3.755978922616617*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"3494d3fb-779d-44b6-91a7-69a785431352"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.687534842966628`"}], "-", 
      RowBox[{"0.6867632236543135`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.0898068789827208`"}], "+", 
      RowBox[{"0.17559019535208475`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.11042123017990206`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.04642759858540106`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.04845821253901601`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.007896247983270162`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.06490053134370884`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.06601619576815793`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.5386325183201282`"}], "-", 
      RowBox[{"0.024955589236284336`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.00463633879664561`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.8099304658904123`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.18008156164831501`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.11066249919813588`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.18008156164831474`"}], "-", 
      RowBox[{"0.1106624991981365`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.004636338796647065`"}], "-", 
      RowBox[{"0.809930465890415`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.538632518320128`"}], "+", 
      RowBox[{"0.024955589236284128`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.06490053134370882`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.06601619576815793`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.04845821253901575`"}], "+", 
      RowBox[{"0.007896247983270419`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.11042123017990246`"}], "-", 
      RowBox[{"0.046427598585400326`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.08980687898272138`"}], "-", 
      RowBox[{"0.17559019535208414`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.6875348429666281`"}], "+", 
      RowBox[{"0.686763223654314`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7559789233978434`*^9, 3.77904615726001*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"a4248fb5-ad68-4c67-8ef3-b40fc18ecd3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sol", "[", "t", "]"}], ".", 
        RowBox[{"(", GridBox[{
           {"1"},
           {"0"},
           {"0"},
           {"0"}
          }], ")"}]}], "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], "//", "Chop"}], "//", 
     "MatrixForm"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", ".000"}], "}"}], ",", "0", ",", "5", ",", ".01"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.755977835563676*^9, 3.7559778489851046`*^9}, {
  3.7559779668604927`*^9, 3.755978001496642*^9}, {3.755978068831255*^9, 
  3.755978070346857*^9}, {3.755979012758728*^9, 3.755979017633562*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"37c1ece2-b4e1-44f1-8b52-92622253b00c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.53, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`t$$], 0.}, 0, 5, 0.01}}, Typeset`size$$ = {
    193., {32.5, 39.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$6668$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$6668$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        MatrixForm[
         Chop[Dot[
            $CellContext`Sol[$CellContext`t$$], {{1}, {0}, {0}, {0}}]/Sqrt[
          2]]]}, "Specifications" :> {{{$CellContext`t$$, 0.}, 0, 5, 0.01}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{283., {84., 91.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7559778495163035`*^9, {3.755977962454383*^9, 3.7559779673292212`*^9}, 
   3.755978002184085*^9, 3.7559780707218113`*^9, 3.755979017867923*^9, 
   3.7790461582214136`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"3b786210-cc27-46d4-ad6e-b4bc3bfffd36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PauliMatrix", "[", "3", "]"}], ".", 
    RowBox[{"PauliMatrix", "[", "1", "]"}], ".", 
    RowBox[{"PauliMatrix", "[", "3", "]"}]}], "-", 
   RowBox[{"PauliMatrix", "[", "2", "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.755978277562461*^9, 3.7559782988335567`*^9}, {
  3.7559783302449245`*^9, 3.755978335016324*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"fbeeb178-df50-419f-b86b-f3a1da5f652c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}]},
     {
      RowBox[{
       RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.755978294114958*^9, 3.7559782991460395`*^9}, 
   3.7559783402192783`*^9, 3.779046178828293*^9},
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"03c96dd3-6548-41d9-bf9e-\
d3431047cf27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sol", "[", "t", "]"}], ".", 
          RowBox[{"(", GridBox[{
             {"1"},
             {"0"},
             {"0"},
             {"0"}
            }], ")"}]}], "//", "MatrixForm"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Sol", "[", "t", "]"}], ".", 
           RowBox[{"eigvecs", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sol", "[", "t", "]"}], ".", 
           RowBox[{"eigvecs", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sol", "[", "t", "]"}], ".", 
           RowBox[{"eigvecs", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sol", "[", "t", "]"}], ".", 
           RowBox[{"eigvecs", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{"Im", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sol", "[", "t", "]"}], ".", 
                RowBox[{"eigvecs", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], 
            RowBox[{"Re", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sol", "[", "t", "]"}], ".", 
                RowBox[{"eigvecs", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]], "]"}]}], "]"}]}]}], 
      "}"}], "//", "Chop"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", ".000"}], "}"}], ",", "0", ",", "5", ",", ".01"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7555378926996365`*^9, 3.75553808362685*^9}, {
  3.7555381349690924`*^9, 3.7555381469953604`*^9}, {3.7555436678098707`*^9, 
  3.7555436726691027`*^9}, {3.755543719522503*^9, 3.755543768474161*^9}, {
  3.755544022135617*^9, 3.7555441741109524`*^9}, {3.7555442337139535`*^9, 
  3.7555443614445744`*^9}, {3.755544418766389*^9, 3.7555444242706413`*^9}, {
  3.7555445030183554`*^9, 3.755544610198004*^9}, {3.7556134689091053`*^9, 
  3.7556134964395404`*^9}, {3.7556136028792267`*^9, 3.755613625925453*^9}, {
  3.7556137584498777`*^9, 3.7556137611372814`*^9}, {3.779046181636629*^9, 
  3.779046182354184*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"fd1b5b24-7bdd-45a3-a62e-c89dc3c8833f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 3.47, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`t$$], 0.}, 0, 5, 0.01}}, Typeset`size$$ = {
    12865., {54., 61.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$9716$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$9716$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> MatrixForm[
        Chop[{{
           MatrixForm[
            Dot[
             $CellContext`Sol[$CellContext`t$$], {{1}, {0}, {0}, {0}}]]}, {
            Dot[
             $CellContext`Sol[$CellContext`t$$], 
             Part[$CellContext`eigvecs, 1]], 
            Dot[
             $CellContext`Sol[$CellContext`t$$], 
             Part[$CellContext`eigvecs, 2]], 
            Dot[
             $CellContext`Sol[$CellContext`t$$], 
             Part[$CellContext`eigvecs, 3]], 
            Dot[
             $CellContext`Sol[$CellContext`t$$], 
             Part[$CellContext`eigvecs, 4]]} Exp[(-I) ArcTan[Im[
                Part[
                 Dot[
                  $CellContext`Sol[$CellContext`t$$], 
                  Part[$CellContext`eigvecs, 1]], 2]]/Re[
               Part[
                Dot[
                 $CellContext`Sol[$CellContext`t$$], 
                 Part[$CellContext`eigvecs, 1]], 2]]]]}]], 
      "Specifications" :> {{{$CellContext`t$$, 0.}, 0, 5, 0.01}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{32781., {105., 112.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7555443140240684`*^9, 3.755544343585699*^9}, 
   3.7555444248175044`*^9, {3.7555445221896405`*^9, 3.7555446104948745`*^9}, {
   3.7556134725183716`*^9, 3.75561349684578*^9}, {3.755613609847768*^9, 
   3.755613633206463*^9}, 3.755613761715372*^9, 3.7556142744546385`*^9, 
   3.75561619613918*^9, 3.7556191903324223`*^9, 3.755794200490473*^9, 
   3.7557952556160946`*^9, 3.7558610655102277`*^9, 3.755974189659294*^9, {
   3.77904616826548*^9, 3.7790461828354797`*^9}, 3.779046229071685*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"bf1f7b71-e748-44e6-b0fc-3086d6404926"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Sol", "[", "0", "]"}], ".", 
   RowBox[{"eigvecs", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "//", "Chop"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "50"}], " ", 
    RowBox[{"Z", "[", "1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SolPulse", "=", 
   RowBox[{"USolve", "[", 
    RowBox[{"Hp", ",", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}], ",", "0", ",", "10", ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SolPulse", "[", "t", "]"}], "-", 
       RowBox[{"Z", "[", "1", "]"}]}], ")"}], "]"}], "//", "Chop"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", ".0000000"}], "}"}], ",", "0", ",", "1", ",", 
     ".0001"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7555442075631204`*^9, 3.7555442242298574`*^9}, {
  3.755861083578162*^9, 3.7558610838281546`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"322f053b-6b0f-477a-9c6e-8b7776c6f2e8"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"eigvecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,69,47,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461886639357`*^9, 3.7790462330006437`*^9},
 CellLabel->
  "During evaluation of \
In[69]:=",ExpressionUUID->"1e7c1917-7790-4d12-9697-04b7da589703"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.`", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.`", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1.`", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1.`"}], "}"}]}], "}"}], ".", 
  RowBox[{
  "eigvecs", "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]], "Output",
 CellChangeTimes->{{3.7555442083755713`*^9, 3.7555442247923155`*^9}, 
   3.7556142764389553`*^9, 3.7556191932408476`*^9, 3.7556237328329287`*^9, 
   3.755794171060357*^9, 3.7557942028654065`*^9, 3.7557952579129047`*^9, {
   3.7558610699319687`*^9, 3.7558610884842377`*^9}, 3.755974195663025*^9, 
   3.779046188684924*^9, 3.779046233023193*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"59637047-2d5b-4733-a9ef-ff7e4d44143a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.2967, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`t$$], 0.}, 0, 1, 0.0001}}, Typeset`size$$ = {
    65., {0., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$9959$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$9959$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Chop[
        Tr[$CellContext`SolPulse[$CellContext`t$$] - $CellContext`Z[1]]], 
      "Specifications" :> {{{$CellContext`t$$, 0.}, 0, 1, 0.0001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{283., {56., 63.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7555442083755713`*^9, 3.7555442247923155`*^9}, 
   3.7556142764389553`*^9, 3.7556191932408476`*^9, 3.7556237328329287`*^9, 
   3.755794171060357*^9, 3.7557942028654065`*^9, 3.7557952579129047`*^9, {
   3.7558610699319687`*^9, 3.7558610884842377`*^9}, 3.755974195663025*^9, 
   3.779046188684924*^9, 3.7790462331231313`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"30cd96ed-314f-44d2-8f8e-7eef9c0d5280"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Tr", "[", 
     RowBox[{"SolPulse", "[", "t", "]"}], "]"}]}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.755617014831749*^9, 3.7556171548263397`*^9}, {
  3.7556208461392207`*^9, 3.7556209308449907`*^9}, {3.755620961802634*^9, 
  3.755620996737484*^9}, {3.755621079712674*^9, 3.7556211483774023`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"0e1ade1f-b5ad-47ba-9ffc-a75b7ea67ccf"],

Cell[BoxData[
 TemplateBox[{
  "FindMaximum","sdprec",
   "\"Line search unable to find a sufficient increase in the function value \
with \\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digit precision.\"",2,73,
   48,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7556211490091267`*^9, 3.7556237530652847`*^9, 
  3.7556237891711173`*^9, 3.7557942120995092`*^9, 3.755795275999563*^9, 
  3.7558611035150223`*^9, 3.7559742017236013`*^9, 3.7790461940785475`*^9, 
  3.779046238708954*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"1536a4d9-35da-40f6-bd19-4753ce76d3e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.8028713307848415`*^10", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "0.8482300440904599`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7556211490091267`*^9, 3.755623753127787*^9, 
  3.755623789202367*^9, 3.7557942121307583`*^9, 3.7557952760308123`*^9, 
  3.7558611035462723`*^9, 3.7559742017704744`*^9, 3.7790461940965357`*^9, 
  3.7790462387229443`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"b6402904-bb47-439c-965d-2a5bc3d428db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Prob2", "[", 
    RowBox[{"t_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"UTotal", "[", "t", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"Pi", "/", "100"}]}], ",", 
     RowBox[{"t0", "=", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hp", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"H0", "[", "t", "]"}], "-", 
      RowBox[{"45", " ", 
       RowBox[{"Z", "[", "1", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"U1", "=", 
     RowBox[{"USolve", "[", 
      RowBox[{"H0", ",", 
       RowBox[{"IdentityMatrix", "[", "4", "]"}], ",", "0", ",", "t0", ",", 
       "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"U2", "=", 
     RowBox[{"USolve", "[", 
      RowBox[{"Hp", ",", 
       RowBox[{"IdentityMatrix", "[", "4", "]"}], ",", "t0", ",", 
       RowBox[{"t0", "+", "\[CapitalDelta]t"}], ",", "1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"U3", "=", 
     RowBox[{"USolve", "[", 
      RowBox[{"H0", ",", 
       RowBox[{"U2", "[", 
        RowBox[{"t0", "+", "\[CapitalDelta]t"}], "]"}], ",", 
       RowBox[{"t0", "+", "\[CapitalDelta]t"}], ",", "10", ",", "1"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"UTotal", "[", "t_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"U1", "[", "t", "]"}], ",", 
          RowBox[{"t", "<", "t0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"U2", "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"t", "\[GreaterEqual]", "t0"}], "&&", 
           RowBox[{"t", "<", 
            RowBox[{"t0", "+", "\[CapitalDelta]t"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"U3", "[", "t", "]"}], ",", 
          RowBox[{"t", ">=", 
           RowBox[{"t0", "+", "\[CapitalDelta]t"}]}]}], "}"}]}], "}"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Prob2", "[", 
         RowBox[{"t", ",", "2", ",", "2"}], "]"}], ",", 
        RowBox[{"Prob2", "[", 
         RowBox[{"t", ",", "3", ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"U2", "[", 
        RowBox[{"t0", "+", "\[CapitalDelta]t"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "3", " ", 
         RowBox[{"Pi", "/", "2"}]}], "]"}]}], "//", "Chop"}], "//", 
     "MatrixForm"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Fidelity", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"U2", "[", 
        RowBox[{"t0", "+", "\[CapitalDelta]t"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "3", " ", 
         RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", 
      RowBox[{"Z", "[", "1", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.755617271424018*^9, 3.7556172843364305`*^9}, {
   3.7556173328561125`*^9, 3.7556174481008*^9}, {3.755618422150894*^9, 
   3.755618422557133*^9}, {3.7556184529344625`*^9, 3.755618491873237*^9}, {
   3.7556185253422165`*^9, 3.755618583946854*^9}, {3.755618621176302*^9, 
   3.7556187487676296`*^9}, {3.755618820605322*^9, 3.7556189050333166`*^9}, {
   3.755618955452368*^9, 3.7556190639381804`*^9}, 3.7556192349950156`*^9, {
   3.755619322918592*^9, 3.7556193415596075`*^9}, {3.755619373393858*^9, 
   3.7556195938676634`*^9}, 3.7556196511334786`*^9, {3.755619685723071*^9, 
   3.7556196982294235`*^9}, {3.755619778381216*^9, 3.75561997122211*^9}, {
   3.7556204516021566`*^9, 3.7556204553676677`*^9}, {3.7556205138810835`*^9, 
   3.755620539552508*^9}, {3.755620573117044*^9, 3.7556206089297*^9}, 
   3.7556206684813814`*^9, {3.7556207162881117`*^9, 3.755620728397132*^9}, {
   3.7556213837627287`*^9, 3.7556213856532974`*^9}, {3.755621879965577*^9, 
   3.755621914346345*^9}, {3.755622186669831*^9, 3.7556222420294476`*^9}, {
   3.755622587292994*^9, 3.755622664426729*^9}, {3.7556227049433947`*^9, 
   3.755622907299985*^9}, {3.755622992038113*^9, 3.755622994181573*^9}, {
   3.755623034393299*^9, 3.7556230630360727`*^9}, {3.7556231719673214`*^9, 
   3.7556231890778065`*^9}, {3.7556235696440344`*^9, 
   3.7556236042244143`*^9}, {3.7556236399156237`*^9, 3.755623679245829*^9}, {
   3.7558611148272*^9, 3.7558611152803116`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"67583432-2a7c-49cd-8c0f-9bb7f6f87681"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnum",
   "\"Encountered non-numerical value for a derivative at \\!\\(\\*RowBox[{\\\
\"BasicFunctions`Private`tSol\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\).\"",2,75,49,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.7790462407460613`*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"87ec323c-55c6-41d3-b47f-6513f8f64ff2"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"\[ImaginaryI]\\\", \
\\\" \\\", RowBox[{SuperscriptBox[\\\"BasicFunctions`Private`USol\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"BasicFunctions`Private`tSol\\\", \\\"]\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"\[Lambda]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"Plus\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", \\\"\[Lambda]\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"\
\[Lambda]\\\", \\\",\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[Lambda]\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\".\\\", RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \
\\\"BasicFunctions`Private`tSol\\\", \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \\\"0\\\", \\\
\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}]}], \\\"}\\\"}], \
\\\",\\\", \\\"BasicFunctions`Private`USol\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"BasicFunctions`Private`tSol\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"4\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,75,50,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.7790462407620535`*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"da242386-1556-4356-bdf4-2578937cb1b5"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnum",
   "\"Encountered non-numerical value for a derivative at \\!\\(\\*RowBox[{\\\
\"BasicFunctions`Private`tSol\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"4.`\\\"}]\\).\"",2,75,51,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.7790462407880354`*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"d5cdca5b-c9ab-435d-adef-2b2ba960355f"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"\[ImaginaryI]\\\", \
\\\" \\\", RowBox[{SuperscriptBox[\\\"BasicFunctions`Private`USol\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"BasicFunctions`Private`tSol\\\", \\\"]\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"\[Lambda]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"Plus\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", \\\"\[Lambda]\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"\
\[Lambda]\\\", \\\",\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[Lambda]\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\".\\\", RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \
\\\"BasicFunctions`Private`tSol\\\", \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \\\"4\\\", \\\
\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\
\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}]}], \\\"}\\\"}], \
\\\",\\\", \\\"BasicFunctions`Private`USol\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"BasicFunctions`Private`tSol\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
RowBox[{\\\"4\\\", \\\"+\\\", FractionBox[\\\"\[Pi]\\\", \\\"100\\\"]}]}], \\\
\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   75,52,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.779046240805025*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"b58e8f8d-09ac-42dd-a235-8d17f09df78e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","deqn",
   "\"Equation or list of equations expected instead of \
\\!\\(\\*RowBox[{\\\"True\\\"}]\\) in the first argument \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"\[ImaginaryI]\\\", \\\
\" \\\", RowBox[{SuperscriptBox[\\\"BasicFunctions`Private`USol\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"BasicFunctions`Private`tSol\\\", \\\"]\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"\[Omega]1\\\"}], \\\"-\\\", \\\"\
\[Omega]2\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"\
\[Lambda]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Omega]1\\\"}], \
\\\"+\\\", \\\"\[Omega]2\\\"}], \\\",\\\", \\\"\[Lambda]\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", \\\"\[Lambda]\\\", \\\",\\\", RowBox[{\\\"\[Omega]1\\\", \\\"-\\\", \
\\\"\[Omega]2\\\"}], \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"\[Lambda]\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", RowBox[{\\\"\[Omega]1\\\", \\\"+\\\", \
\\\"\[Omega]2\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \\\".\\\", \
RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \
\\\"BasicFunctions`Private`tSol\\\", \\\"]\\\"}]}]}], \\\",\\\", \
\\\"True\\\"}], \\\"}\\\"}]\\).\"",2,75,53,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.779046240836005*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"961756bb-6f43-4b07-8b7b-826bceb33794"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"\[ImaginaryI]\\\", \
\\\" \\\", RowBox[{SuperscriptBox[\\\"BasicFunctions`Private`USol\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"BasicFunctions`Private`tSol\\\", \\\"]\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"\[Lambda]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"Plus\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\",\\\", \\\"\[Lambda]\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"\
\[Lambda]\\\", \\\",\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[Lambda]\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\".\\\", RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \
\\\"BasicFunctions`Private`tSol\\\", \\\"]\\\"}]}]}], \\\",\\\", \
\\\"True\\\"}], \\\"}\\\"}], \\\",\\\", \\\"BasicFunctions`Private`USol\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"BasicFunctions`Private`tSol\\\", \\\
\",\\\", RowBox[{\\\"4\\\", \\\"+\\\", FractionBox[\\\"\[Pi]\\\", \
\\\"100\\\"]}], \\\",\\\", \\\"10\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,75,54,30389148424898924140,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.7790462408499975`*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"99825c11-e07c-4ffd-9f26-d0bc94663fbd"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,75,55,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.779046240872983*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"9dd842c9-1d97-4843-a08e-13debb60c830"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \
\\\"0.0002042857142857143`\\\", \\\"]\\\"}]\\) does not exist.\"",2,75,56,
   30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.7790462409929075`*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"e3dc513e-2c29-44a7-8088-7a7bceb98f47"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \
\\\"0.20428591836734694`\\\", \\\"]\\\"}]\\) does not exist.\"",2,75,57,
   30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.77904624107086*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"259844ae-48d9-4f2e-abbf-1c56b99ca20d"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"BasicFunctions`Private`USol\\\", \\\"[\\\", \
\\\"0.40836755102040817`\\\", \\\"]\\\"}]\\) does not exist.\"",2,75,58,
   30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.779046241082852*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"383fc33d-6b2c-40a3-9535-93482ceb3ea2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,75,59,30389148424898924140,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7790461967913113`*^9, 3.779046241094844*^9},
 CellLabel->
  "During evaluation of \
In[74]:=",ExpressionUUID->"81ec8c9b-6c0e-4cdd-8a6d-848876928b7b"],

Cell[BoxData[
 RowBox[{"Fidelity", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"BasicFunctions`Private`USol", "[", 
     RowBox[{"4", "+", 
      FractionBox["\[Pi]", "100"]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.755623792325276*^9, 3.7557942170056157`*^9, {3.7557952818431416`*^9, 
   3.7557952900460253`*^9}, 3.755795364877768*^9, 3.755795556310289*^9, 
   3.755861116905241*^9, 3.755974204910996*^9, 3.7790461971870675`*^9, 
   3.7790462411068377`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"5819165e-fafe-4af0-a7e1-9d83f880aa21"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7558612922761836`*^9, 
  3.7558612932449293`*^9}},ExpressionUUID->"aaf9a5d9-c10d-4e44-973e-\
573133977a8f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 967},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 157, 3, 32, "Input",ExpressionUUID->"51d310c6-1345-4070-99da-97e9e9d2174a"],
Cell[CellGroupData[{
Cell[740, 27, 172, 3, 107, "Title",ExpressionUUID->"69463010-9cbb-47be-a96e-8daa5f77f1d3"],
Cell[915, 32, 152, 2, 39, "Text",ExpressionUUID->"e4e2c69d-b8f4-42f9-8e7c-ccd05aa327e6"],
Cell[CellGroupData[{
Cell[1092, 38, 13484, 360, 713, "Input",ExpressionUUID->"880ef7b8-ba86-4779-99a4-7a7cd5abb59b"],
Cell[14579, 400, 445, 10, 23, "Message",ExpressionUUID->"efa0e120-d2ee-4d75-b7cc-577b9d347660"],
Cell[15027, 412, 387, 5, 36, "Output",ExpressionUUID->"4c45c6ab-0170-48e7-b26d-b1e6c9f5e2b5"],
Cell[15417, 419, 1470, 36, 69, "Output",ExpressionUUID->"247dcfa0-379f-44db-a7ec-16679aadbffa"],
Cell[16890, 457, 1967, 43, 344, "Output",ExpressionUUID->"a9db200e-7919-4944-b1de-b5e3c6091f71"],
Cell[18860, 502, 3499, 66, 300, "Output",ExpressionUUID->"6be53382-dea8-4076-acf4-027e41414592"],
Cell[22362, 570, 1922, 59, 145, "Output",ExpressionUUID->"a3875527-725f-47ac-817b-6ab4b0e771e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24321, 634, 164, 3, 73, "Section",ExpressionUUID->"1b580a97-456c-4d0f-b505-2a1bfeff7e28"],
Cell[CellGroupData[{
Cell[24510, 641, 7668, 179, 744, "Input",ExpressionUUID->"7c8de1e1-2f15-4f08-b5a4-05e1240d5eff"],
Cell[32181, 822, 1163, 30, 107, "Output",ExpressionUUID->"06ae1659-2a12-4789-b7e5-15874709f9f5"],
Cell[33347, 854, 3701, 96, 98, "Output",ExpressionUUID->"c896f084-133f-499b-8364-e7c4f716eab2"],
Cell[37051, 952, 2176, 63, 98, "Output",ExpressionUUID->"a3ae4d79-f5d8-41d6-9d40-3eb7cc635976"],
Cell[39230, 1017, 18110, 298, 296, 4304, 72, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"703fdcce-66b4-40be-a82a-2091170617d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57377, 1320, 6510, 175, 328, "Input",ExpressionUUID->"91b5e671-b27c-4623-8836-89bab2c6b4b7"],
Cell[63890, 1497, 2500, 64, 191, "Output",ExpressionUUID->"5967ea0b-2adb-442c-a3b2-f6863dd3f4d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66427, 1566, 3346, 77, 77, "Input",ExpressionUUID->"c7b52fb6-879f-44cc-9049-3742bb65f7b2"],
Cell[69776, 1645, 3823, 68, 436, "Output",ExpressionUUID->"cd47b0dc-5ee7-4f91-a5d0-9f99bad18bbb"],
Cell[73602, 1715, 6312, 184, 347, "Output",ExpressionUUID->"5e44a085-d67e-4d9a-8625-4d05add82953"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79951, 1904, 244, 4, 59, "Subsection",ExpressionUUID->"6e6b19a6-e258-4830-b583-e8d0bcc24741"],
Cell[80198, 1910, 161, 3, 39, "Text",ExpressionUUID->"b46fdabf-a1f8-49fa-bf81-5d567ad4d922"],
Cell[CellGroupData[{
Cell[80384, 1917, 2776, 77, 303, "Input",ExpressionUUID->"7b77e25e-0dac-466b-a4ea-7064c45068ee"],
Cell[83163, 1996, 139303, 2303, 279, "Output",ExpressionUUID->"4982c213-c497-44e6-9c77-1c665f526af3"]
}, Open  ]],
Cell[222481, 4302, 215, 4, 39, "Text",ExpressionUUID->"7196af7e-40d6-4d40-bd2b-9c335a833596"],
Cell[222699, 4308, 1038, 25, 77, "Input",ExpressionUUID->"50f54617-b020-4bc7-9297-9ccd820c0684"],
Cell[223740, 4335, 1640, 44, 59, "Input",ExpressionUUID->"1ba3095a-8e20-4d82-aaba-585855f98885"],
Cell[CellGroupData[{
Cell[225405, 4383, 316, 7, 32, "Input",ExpressionUUID->"1e112d04-4340-48f8-88e6-1ef6ff067f88"],
Cell[225724, 4392, 1823, 45, 111, "Output",ExpressionUUID->"970bcf84-01f3-4bcd-91a9-f2d04e475a7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227584, 4442, 3185, 62, 78, "Input",ExpressionUUID->"c240d22e-df51-4085-b762-5818b9c8b215"],
Cell[230772, 4506, 63625, 1063, 282, "Output",ExpressionUUID->"b1f7a048-be5c-40d6-b43e-983743e9bc87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294434, 5574, 321, 6, 32, "Input",ExpressionUUID->"37bbfab4-21a2-4527-9440-1103a32f927f"],
Cell[294758, 5582, 750, 22, 107, "Output",ExpressionUUID->"bb259538-f9fa-46d4-ba3a-cbb6ffadd20a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295545, 5609, 201, 3, 32, "Input",ExpressionUUID->"3494d3fb-779d-44b6-91a7-69a785431352"],
Cell[295749, 5614, 2496, 55, 59, "Output",ExpressionUUID->"a4248fb5-ad68-4c67-8ef3-b40fc18ecd3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298282, 5674, 852, 25, 87, "Input",ExpressionUUID->"37c1ece2-b4e1-44f1-8b52-92622253b00c"],
Cell[299137, 5701, 1909, 39, 196, "Output",ExpressionUUID->"3b786210-cc27-46d4-ad6e-b4bc3bfffd36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301083, 5745, 473, 10, 32, "Input",ExpressionUUID->"fbeeb178-df50-419f-b86b-f3a1da5f652c"],
Cell[301559, 5757, 820, 24, 71, "Output",ExpressionUUID->"03c96dd3-6548-41d9-bf9e-d3431047cf27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302416, 5786, 2793, 72, 127, "Input",ExpressionUUID->"fd1b5b24-7bdd-45a3-a62e-c89dc3c8833f"],
Cell[305212, 5860, 3029, 63, 238, "Output",ExpressionUUID->"bf1f7b71-e748-44e6-b0fc-3086d6404926"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308278, 5928, 1171, 33, 99, "Input",ExpressionUUID->"322f053b-6b0f-477a-9c6e-8b7776c6f2e8"],
Cell[309452, 5963, 473, 10, 23, "Message",ExpressionUUID->"1e7c1917-7790-4d12-9697-04b7da589703"],
Cell[309928, 5975, 912, 20, 36, "Output",ExpressionUUID->"59637047-2d5b-4733-a9ef-ff7e4d44143a"],
Cell[310843, 5997, 2014, 38, 140, "Output",ExpressionUUID->"30cd96ed-314f-44d2-8f8e-7eef9c0d5280"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312894, 6040, 477, 9, 32, "Input",ExpressionUUID->"0e1ade1f-b5ad-47ba-9ffc-a75b7ea67ccf"],
Cell[313374, 6051, 635, 13, 23, "Message",ExpressionUUID->"1536a4d9-35da-40f6-bd19-4753ce76d3e4"],
Cell[314012, 6066, 488, 9, 42, "Output",ExpressionUUID->"b6402904-bb47-439c-965d-2a5bc3d428db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314537, 6080, 4979, 118, 277, "Input",ExpressionUUID->"67583432-2a7c-49cd-8c0f-9bb7f6f87681"],
Cell[319519, 6200, 463, 10, 23, "Message",ExpressionUUID->"87ec323c-55c6-41d3-b47f-6513f8f64ff2"],
Cell[319985, 6212, 2862, 42, 62, "Message",ExpressionUUID->"da242386-1556-4356-bdf4-2578937cb1b5"],
Cell[322850, 6256, 463, 10, 23, "Message",ExpressionUUID->"d5cdca5b-c9ab-435d-adef-2b2ba960355f"],
Cell[323316, 6268, 2926, 43, 89, "Message",ExpressionUUID->"b58e8f8d-09ac-42dd-a235-8d17f09df78e"],
Cell[326245, 6313, 1721, 28, 23, "Message",ExpressionUUID->"961756bb-6f43-4b07-8b7b-826bceb33794"],
Cell[327969, 6343, 2268, 35, 89, "Message",ExpressionUUID->"99825c11-e07c-4ffd-9f26-d0bc94663fbd"],
Cell[330240, 6380, 472, 10, 23, "Message",ExpressionUUID->"9dd842c9-1d97-4843-a08e-13debb60c830"],
Cell[330715, 6392, 484, 11, 23, "Message",ExpressionUUID->"e3dc513e-2c29-44a7-8088-7a7bceb98f47"],
Cell[331202, 6405, 479, 11, 23, "Message",ExpressionUUID->"259844ae-48d9-4f2e-abbf-1c56b99ca20d"],
Cell[331684, 6418, 480, 11, 23, "Message",ExpressionUUID->"383fc33d-6b2c-40a3-9535-93482ceb3ea2"],
Cell[332167, 6431, 467, 10, 23, "Message",ExpressionUUID->"81ec8c9b-6c0e-4cdd-8a6d-848876928b7b"],
Cell[332637, 6443, 1007, 25, 84, "Output",ExpressionUUID->"5819165e-fafe-4af0-a7e1-9d83f880aa21"]
}, Open  ]],
Cell[333659, 6471, 156, 3, 32, "Input",ExpressionUUID->"aaf9a5d9-c10d-4e44-973e-573133977a8f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

